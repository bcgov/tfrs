kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: tfrs-notification-server{{ .Values.suffix }}
  creationTimestamp:
  labels:
    {{- include "tfrs-notification-server.labels" . | nindent 4 }}
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      - notification-server
      from:
        kind: ImageStreamTag
        name: tfrs-notification-server:{{ .Values.notificationServerImageTagName }}
      lastTriggeredImage: ''
  - type: ConfigChange
  replicas: 1
  test: false
  selector:
    {{- include "tfrs-notification-server.selectorLabels" . | nindent 4 }}
  template:
    metadata:
      creationTimestamp:
      labels:
        {{- include "tfrs-notification-server.labels" . | nindent 8 }}
    spec:
      containers:
      - name: notification-server
        image: ''
        ports:
        - containerPort: 3000
          protocol: TCP
        env:
        - name: RABBITMQ_HOST
          value: tfrs-rabbitmq.{{ .Values.namespace }}.svc.cluster.local
        - name: RABBITMQ_VHOST
          value: {{ .Values.rabbitmqVHost }}
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: tfrs-rabbitmq-app
              key: username
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tfrs-rabbitmq-app
              key: password
        - name: NPM_RUN
          value: start:notifications
        - name: KEYCLOAK_CERTS_URL
          value: ""
        resources:
{{ toYaml .Values.resources | indent 12 }}
        livenessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 35
          timeoutSeconds: 3
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: File
        imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
status:
  latestVersion: 0
  observedGeneration: 0
  replicas: 0
  updatedReplicas: 0
  availableReplicas: 0
  unavailableReplicas: 0
