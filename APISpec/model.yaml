definitions:
  CreditTrade:
    type: object
    description: A transaction that if completed changes the number of Low-Carbon Fuel Credits owned by a Fuel Supplier. The transfer of Credits may involve the BC Gov&#39;t (an award or retirement of Credits) or another Fuel Supplier (a Buy or Sell).
    required:
      - id
      - creditTradeStatusId
      - respondent
      - creditTradeTypeId
      - numberOfCredits
      - plainEnglishPhrase
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Credit Trade.
      creditTradeStatusId:
        $ref: '#/definitions/CreditTradeStatus'
        description: A foreign key reference to a CreditTradeStatus.
      initiator:
        $ref: '#/definitions/FuelSupplier'
        description: A foreign key reference to the Fuel Supplier that initiated the transaction. Will be NULL if the Government of BC initiated the transaction.
      respondent:
        $ref: '#/definitions/FuelSupplier'
        description: A foreign key reference to a Fuel Supplier to which the trade was proposed.
      tradeEffectiveDate:
        type: string
        format: date-time
        description: The effective date of the trade if specified beforehand and after execution. If NULL - indicates the trade has not occurred and the effective date will be the date the Ministry Approver approves the transaction.
      creditTradeTypeId:
        $ref: '#/definitions/CreditTradeType'
        description: A foreign key reference to the CreditTradeType.
      numberOfCredits:
        format: int32
        type: integer
        description: The number of credits involved in the Credit Trade.
      fairMarketValuePerCredit:
        type: number
        format: float
        description: The price (if applicable) of each credit in the transaction. There is no fair market value on transaction initiated by the Government of BC.
      historySet:
        type: array
        items:
          $ref: '#/definitions/CreditTradeHistory'
        description: A foreign key reference to the Credit Trade History entries related to this Credit Trade.
      plainEnglishPhrase:
        type: string
        maxLength: 255
        description: A plain English phrase displaying the current state of the Credit Trade.
  CreditTradeHistory:
    type: object
    description: A snapshot of a Credit Trade following a change to the Credit Trade data.
    required:
      - id
      - userId
      - creditTradeUpdateTime
      - creditTradeStatusId
      - creditTradeTypeId
      - newNumberOfCredits
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Credit Trade History.
      userId:
        $ref: '#/definitions/User'
        description: A foreign key reference to the User that updated the Credit Trade.
      creditTradeUpdateTime:
        type: string
        format: date-time
        description: The date&#x2F;time the update was made to the Credit Trade.
      creditTradeStatusId:
        $ref: '#/definitions/CreditTradeStatus'
        description: A foreign key reference to a CreditTradeStatus indicating the Credit Trade Status after the update.
      newTradeEffectiveDate:
        type: string
        format: date-time
        description: The Trade Effective Date of the Credit Trade after the update.
      creditTradeTypeId:
        $ref: '#/definitions/CreditTradeType'
        description: A foreign key reference to a CreditTradeType after the update.
      newNumberOfCredits:
        format: int32
        type: integer
        description: The number of credits involved in the Credit Trade after the update.
      newFairMarketValuePerCredit:
        type: number
        format: float
        description: The Fair Market Value per Credit in the Credit Trade after the update.
      note:
        type: string
        maxLength: 4096
        description: A note entered by the user making the update about the Credit Trade update.
      isInternalHistoryRecord:
        type: boolean
        description: True if the Credit Trade history record is to be visible only to those in the organization of the user that made the update.
  CreditTradeStatus:
    type: object
    description: The possible status values associated with a Credit Trade.
    required:
      - id
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Credit Trade Status.
      status:
        type: string
        description: The name of the Credit Trade status.
      description:
        type: string
        description: Information about the purpose of the Credit Trade status.
      effectiveDate:
        type: string
        format: date-time
        description: The datetime upon which the Credit Trade status was activated for use.
      expirationDate:
        type: string
        format: date-time
        description: The data after which the Credit Trade status will no longer be used.
      displayOrder:
        format: int32
        type: integer
        description: The order of display of the Credit Trade status. In general the order will be listed chronologically as they occur in a typical transaction, with exception statuses (e.g. Cancelled) at the bottom.
  CreditTradeType:
    type: object
    description: The types of Credit Trades that can be proposed by the initiating organization.
    required:
      - id
      - effectiveDate
      - expirationDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Credit Trade Type.
      theType:
        type: string
        description: The name of the type of Credit Trade, such as Buy, Sell, Award, etc.
      description:
        type: string
        description: End user help-text information about the Credit Trade type.
      effectiveDate:
        type: string
        format: date-time
        description: The datetime upon which the Credit Trade type was activated for use.
      expirationDate:
        type: string
        format: date-time
        description: The data after which the Credit Trade type will no longer be used.
      displayOrder:
        format: int32
        type: integer
        description: The order of display of the Credit Trade type In general the order will be listed in the order of expected frequency.
      isGovOnlyType:
        type: boolean
        description: The Credit Trade Type is a government-only type of Credit Trade - not available to Fuel Suppliers.
  Opportunity:
    type: object
    description: A posting by a Fuel Supplier seller to indicate an interest in making a Credit Trade visible to all other Fuel Suppliers of a designated type.
    required:
      - id
      - fuelSupplierId
      - opportunityStatusId
      - creditTradeTypeId
      - fuelSupplierTypeId
      - numberOfCredits
      - plainEnglishPhrase
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for an Opportunity.
      fuelSupplierId:
        $ref: '#/definitions/FuelSupplier'
        description: A foreign key reference to the FuelSupplier that created the Opportunity.
      opportunityStatusId:
        $ref: '#/definitions/OpportunityStatus'
        description: A foreign key reference to Opportunity Status.
      creditTradeTypeId:
        $ref: '#/definitions/CreditTradeType'
        description: A foreign key reference to Credit Trade Type.
      fuelSupplierTypeId:
        $ref: '#/definitions/FuelSupplierType'
        description: A foreign key reference to Fuel Supplier Type that is being invited to respond to the Opportunity.
      numberOfCredits:
        format: int32
        type: integer
        description: The number of credits being suggested as part of the Opportunity.
      suggestedValuePerCredit:
        type: number
        format: float
        description: The suggested price of each credit that is part of the Opportunity.
      hasTradeNow:
        type: boolean
        description: Set true by the Fuel Supplier posting the Opportunity confirming they are willing to automatically accept a proposal for all of the credits at the suggested price per credit.
      numberOfViews:
        format: int32
        type: integer
        description: A count of the number of views of the Opportunity.
      datePosted:
        type: string
        format: date-time
        description: The date&#x2F;time the Opportunity was publically posted for potential trading partners.
      opportunityBackgroundNote:
        type: string
        description: A note about the Opportunity that is set by the Fuel Supplier posting the Opportunity and visible to those viewing the Opportunity.
      creditTradesSet:
        type: array
        items:
          $ref: '#/definitions/CreditTrade'
        description: A foreign key reference to the Credit Trades that were generated from the publishing of this Opportunity.
      plainEnglishPhrase:
        type: string
        maxLength: 255
        description: A plain English phrase displaying the current state of the Opportunity.
  OpportunityHistory:
    type: object
    description: The history of updates made to an Opportunity.
    required:
      - id
      - opportunityId
      - userId
      - creditTradeTypeId
      - fuelSupplierTypeId
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for an Opportunity History.
      opportunityId:
        $ref: '#/definitions/Opportunity'
        description: A foreign key reference to a Opportunity.
      userId:
        $ref: '#/definitions/User'
        description: A foreign key reference to the User that made the update to the Opportunity.
      updateTime:
        type: string
        format: date-time
        description: The date&#x2F;time the change was made to the Opportunity.
      creditTradeTypeId:
        $ref: '#/definitions/CreditTradeType'
        description: A foreign key reference to a Credit Trade Type after the Opportunity update.
      newNumberOfCredits:
        format: int32
        type: integer
        description: The number of credits involved in the Opportunity after the update.
      newProposedValuePerCredit:
        type: number
        format: float
        description: The Proposed Fair Market Value per Credit in the Opportunity after the update.
      fuelSupplierTypeId:
        $ref: '#/definitions/FuelSupplierType'
        description: A foreign key reference to the Fuel Supplier Type invited to respond to the Opportunity after the Opportunity update.
      newTradeEffectiveDate:
        type: string
        format: date-time
        description: The Trade Effective Date of the opportunity after the update.
      note:
        type: string
        maxLength: 4096
        description: A note entered about the Opportunity update.
  OpportunityStatus:
    type: object
    description: The possible status values associated with an opportunity.
    required:
      - id
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for the Opportunity status.
      status:
        type: string
        description: The name of the Opportunity status.
      description:
        type: string
        description: End user help-text information about the Opportunity status.
      effectiveDate:
        type: string
        format: date-time
        description: The date&#x2F;time upon which the Opportunity status was activated for use.
      expirationDate:
        type: string
        format: date-time
        description: The data after which the Opportunity status will no longer be used.
      displayOrder:
        format: int32
        type: integer
        description: The order of display of the Opportunity status. In general the order will be listed chronologically as they occur in a typical transaction, with exception statuses (e.g. Cancelled) at the bottom.
  FuelSupplier:
    type: object
    description: A Fuel Supplier that is or was eligible to be a part of the Low Carbon Fuel Credits trading program.
    required:
      - id
      - name
      - fuelSupplierStatusId
      - fuelSupplierTypeId
      - fuelSupplierActionsTypeId
      - dateCreated
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for the Fuel Supplier.
      name:
        type: string
        uniqueItems: true
        description: The name of the Fuel Supplier pulled from the Common Client information about the Fuel Supplier.
      fuelSupplierStatusId:
        $ref: '#/definitions/FuelSupplierStatus'
        description: A foreign key reference to the Fuel Supplier Status.
      fuelSupplierTypeId:
        $ref: '#/definitions/FuelSupplierType'
        description: A foreign key reference to the Fuel Supplier Type.
      fuelSupplierActionsTypeId:
        $ref: '#/definitions/FuelSupplierActionsType'
        description: A foreign key reference to the Fuel Supplier&#39;s Actions Type.
      dateCreated:
        type: string
        format: date-time
        description: The date&#x2F;time the Fuel Supplier was added as a Fuel Supplier to the TFRS program.
  FuelSupplierCCData:
    type: object
    description: Information from the Natural Resources Sector&#39;s Common Client system about the Fuel Supplier. The data is a cache of the data in Common Client and is ideally (assuming Common Client is online) updated on each access of the information, and periodically (for reporting purposes).
    required:
      - id
      - fuelSupplierId
      - commonClientOrgId
      - lastUpdatefromCommonClient
      - name
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for the Fuel Supplier Common Client record.
      fuelSupplierId:
        $ref: '#/definitions/FuelSupplier'
        description: A foreign key reference to a Fuel Supplier for which the Common Client data is related.
      commonClientOrgId:
        type: string
        uniqueItems: true
        description: The Foreign Key Id of the Fuel Supplier in Common Client. Used for Web Services calls to the NRS Common Client API.
      lastUpdatefromCommonClient:
        type: string
        format: date-time
        description: The date&#x2F;time of the last update of the Common Client information about the Fuel Supplier.
      name:
        type: string
        description: The Name of the Fuel Supplier - from Common Client.
      corporateAddressLine1:
        type: string
        description: Address Line 1  of the Fuel Supplier&#39;s primary Corporate Address - from Common Client.
      corporateAddressLine2:
        type: string
        description: Address Line 2  of the Fuel Supplier&#39;s primary Corporate Address - from Common Client.
      corporateAddressCity:
        type: string
        description: City of the Fuel Supplier&#39;s primary Corporate Address - from Common Client.
      corporateAddressPostalCode:
        type: string
        description: Postal Code  of the Fuel Supplier&#39;s primary Corporate Address - from Common Client.
      corporateAddressProvince:
        type: string
        description: Province of the Fuel Supplier&#39;s primary Corporate Address - from Common Client.
  FuelSupplierBalance:
    type: object
    description: The ledger tracking the balance of Credits owned by a Fuel Supplier and updated on the completion of Credit Trade.
    required:
      - id
      - fuelSupplierId
      - validatedCredits
      - encumberedCredits
      - effectiveDate
      - creditTradeId
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for the Fuel Supplier Balance.
      fuelSupplierId:
        $ref: '#/definitions/FuelSupplier'
        description: A foreign key reference to the FuelSupplier.
      validatedCredits:
        format: int32
        type: integer
        description: The number of validated credits held by the Fuel Supplier at the time the record was active.
      encumberedCredits:
        format: int32
        type: integer
        description: The number of encumbered credits held by the Fuel Supplier at the time the record was active.
      effectiveDate:
        type: string
        format: date-time
        description: The effective date at which the given numbers of validated and encumbered credits were held by the Fuel Supplier.
      endDate:
        type: string
        format: date-time
        description: The date this record was no longer in effect - likely because a new record was added with new Credit count(s).
      creditTradeId:
        $ref: '#/definitions/CreditTrade'
        description: A foreign key reference to a CreditTrade that triggered a change in the number of validated or encumbered credits held by the Fuel Supplier.
  FuelSupplierStatus:
    type: object
    description: The statuses of a Fuel Supplier over their lifecycle in the application.
    required:
      - id
      - status
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Fuel Supplier Status.
      status:
        type: string
        description: The name of the Fuel Supplier status.
      description:
        type: string
        description: End user help-text information about the Fuel Supplier Status.
      effectiveDate:
        type: string
        format: date-time
        description: The date&#x2F;time upon which the Fuel Supplier status was activated for use.
      expirationDate:
        type: string
        format: date-time
        description: The data after which the Fuel Supplier status will no longer be used.
      displayOrder:
        format: int32
        type: integer
        description: The order of display of the Fuel Supplier status. In general the order will be listed chronologically as they occur in a typical transaction, with exception statuses (e.g. Cancelled) at the bottom.
  FuelSupplierType:
    type: object
    description: The types of Fuel Suppliers that can be proposed by the initiating organization.
    required:
      - id
      - theType
      - effectiveDate
      - expirationDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Fuel Supplier Type.
      theType:
        type: string
        description: The name of the type of Fuel Supplier, such as Part 3 Fuel Supplier, Petroleum Fuel Supplier, etc.
      description:
        type: string
        description: End user help-text information about the Fuel Supplier type.
      effectiveDate:
        type: string
        format: date-time
        description: The datetime upon which the Fuel Supplier type was activated for use.
      expirationDate:
        type: string
        format: date-time
        description: The data after which the Fuel Supplier type will no longer be used.
      displayOrder:
        format: int32
        type: integer
        description: The order of display of the Fuel Supplier type. In general, the order will be listed alphabetically.
  FuelSupplierActionsType:
    type: object
    description: The types of actions that Fuel Suppliers that can take - Buy and Sell, Buy Only, etc.
    required:
      - id
      - theType
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Fuel Supplier Actions Type.
      theType:
        type: string
        description: The name of the type of actions the Fuel Supplier can perform.
      description:
        type: string
        description: End user help-text information about the Fuel Supplier actions type.
      effectiveDate:
        type: string
        format: date-time
        description: The datetime upon which the Fuel Supplier actions type was activated for use.
      expirationDate:
        type: string
        format: date-time
        description: The date&#x2F;time after which the Fuel Supplier action type will no longer be used.
      displayOrder:
        format: int32
        type: integer
        description: The order of display of the Fuel Supplier actions type. The order will be alphabetic.
  FuelSupplierContact:
    type: object
    description: A table of contacts related to the Fuel Suppliers in the system.
    required:
      - id
      - fuelSupplierId
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Fuel Supplier Contact.
      fuelSupplierId:
        $ref: '#/definitions/FuelSupplier'
        description: A foreign key reference to a FuelSupplier.
      givenName:
        type: string
        description: The given name of the contact.
      surname:
        type: string
        description: The surname of the contact.
      title:
        type: string
        description: The title of the contact within their organization.
      userId:
        $ref: '#/definitions/User'
        description: A foreign key reference to a User.
      notes:
        type: string
        description: A note about the contact maintained by the users.
      emailAddress:
        type: string
        description: The email address for the contact.
      workPhoneNumber:
        type: string
        description: The work phone number for the contact.
      mobilePhoneNumber:
        type: string
        description: The mobile phone number for the contact.
  FuelSupplierContactRole:
    type: object
    description: The set of roles that can be given to a contact in the system.
    required:
      - id
      - roleId
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Fuel Supplier Contact Role.
      roleId:
        $ref: '#/definitions/Role'
        description: A foreign key reference to a Role that can be assigned to a Fuel Supplier contact user.
  FuelSupplierAttachment:
    type: object
    description: Attachments uploaded by users about Fuel Supplier.
    required:
      - id
      - fuelSupplierId
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Fuel Supplier Attachment.
      fuelSupplierId:
        $ref: '#/definitions/FuelSupplier'
        description: A foreign key reference to a FuelSupplier.
      fileName:
        type: string
        description: Filename as passed by the user uploading the file.
      fileLocation:
        type: string
        description: The location of the file relative to the server - possibly an ID for getting the file from the Natural Resources Sector (NRS) Document Management system.
      description:
        type: string
        description: A note about the attachment,  optionally provided by the user on upload or replacement.
      complianceYear:
        type: string
        description: The compliance year (FY) to which this document pertains.
  FuelSupplierAttachmentTag:
    type: object
    description: A tag associated with a Fuel Supplier Attachment.
    required:
      - id
      - fuelSupplierAttachmentId
      - tag
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Fuel Supplier Attachment.
      fuelSupplierAttachmentId:
        $ref: '#/definitions/FuelSupplierAttachment'
        description: A foreign key reference to the Fuel Supplier Attachment to which the tag is related.
      tag:
        type: string
        maxLength: 100
        description: A user-entered to tag applied to the Fuel Supplier Attachment.
  FuelSupplierHistory:
    type: object
    description: The history of updates made to a Fuel Supplier.
    required:
      - id
      - fuelSupplierId
      - historyText
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Fuel Supplier History.
      fuelSupplierId:
        $ref: '#/definitions/FuelSupplier'
        description: A foreign key reference to a FuelSupplier.
      historyText:
        type: string
        description: The text of the history entry tracked against the related entity.
  UserFavourite:
    type: object
    description: User specific settings for a specific location in the UI. The location and saved settings are internally defined by the UI.
    required:
      - id
      - userId
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a User Favourite.
      context:
        type: string
        description: The context (as defined by the UI) in the application to which this favourite applies.
      name:
        type: string
        description: The user-defined name for the recorded settings. Allows the user to save dipportunityent groups of settings and access each one easily when needed.
      value:
        type: string
        description: The settings saved by the user. In general,  a UI defined chunk of json that stores the settings in place when the user created the favourite.
      isDefault:
        type: boolean
        description: True if this Favourite is the default for this Context Type. On first access to a context in a session the default favourite for the context it is invoked. If there is no default favourite,  a system-wide default is invoked. On return to the context within a session,  the last parameters used are reapplied.
      userId:
        $ref: '#/definitions/User'
        description: A foreign key reference to a User.
  Notification:
    type: object
    description: Users associated with specific notifications, created at the time the notification record is created because of the user&#39;s business relationship to the bus - e.g. the user is the currently assigned inspector, or the user is the manager for the District in which the bus is located. The rules for linking a user to a notification for a specific bus could vary over time based on the needs of the business. At minimum, it is expected the current inspector assigned to a bus will be notified of every notification for that bus.
    required:
      - id
      - notificationEventId
      - userId
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Notification.
      notificationEventId:
        $ref: '#/definitions/NotificationEvent'
        description: A foreign key reference to a NotificationEvent.
      hasBeenViewed:
        type: boolean
        description: True if the user linked to the notification has read the notification.
      isWatchNotification:
        type: boolean
        description: True if the user linked to the notification has flagged the notification to remain visible.
      userId:
        $ref: '#/definitions/User'
        description: A foreign key reference to a User.
  NotificationEvent:
    type: object
    description: Notifications associated about changes to information related to a specific Credit Trade - eg trade suggested, trade countered, trade approved, etc.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Notification Event.
      eventTime:
        type: string
        format: date-time
        description: The date&#x2F;time of the creation of the event that triggered the creation of the notification.
      eventTypeCode:
        type: string
        description: A categorization of the event for which the notification was created. The categories will be defined over time in code based on the requirements of the business. An example might be a notification &quot;Trade Created&quot; when a trade is created by a Fuel Supplier and the notification is linked to the Partner Fuel Supplier.
      notes:
        type: string
        description: An assembled text string about the event that triggered the notification. Includes both static text and data about the notification. User Interface code will be used (based on the eventTypeCode - category) to assemble a dynamic string of information about the event - potentially including links to other relevant data - such as link to the School Bus detail screen.
      creditTradeId:
        $ref: '#/definitions/CreditTrade'
        description: A foreign key reference to a CreditTrade.
      opportunityId:
        $ref: '#/definitions/Opportunity'
        description: A foreign key reference to a Opportunity.
  NotificationType:
    type: object
    description: The types of notifications that occur in the system and might be of interest to users.
    required:
      - id
      - theType
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Notification Type.
      theType:
        type: string
        description: The name of the notification type presented to the users.
      description:
        type: string
        description: End user help-text information about the notification type.
      effectiveDate:
        type: string
        format: date-time
        description: The datetime upon which the notification type was activated for use.
      expirationDate:
        type: string
        format: date-time
        description: The date&#x2F;time after which the notification type will no longer be used.
      displayOrder:
        format: int32
        type: integer
        description: The order of display of the notification types.
  User:
    type: object
    description: Information about the users of the system.
    required:
      - id
      - givenName
      - surname
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a User.
      authorizationID:
        type: string
        description: The ID of the User in the authorization system of record.
      givenName:
        type: string
        description: Given name of the user.
      surname:
        type: string
        description: Surname of the user.
      email:
        type: string
        description: The email address of the user in the system.
      userId:
        type: string
        description: The text user ID of the user in the given Authorization Directory.
      guid:
        type: string
        description: The GUID unique to the user as provided by the authentication system. In this case, authentication is done by Siteminder and the GUID uniquely identifies the user within the user directories managed by Siteminder - e.g. IDIR and BCeID. The GUID is equivalent to the IDIR Id, but is guaranteed unique to a person, while the IDIR ID is not - IDIR IDs can be recycled.
      authorizationDirectory:
        type: string
        description: The name of the Authorization Directory from with which the user Id is recorded.
  Role:
    type: object
    description: A table managed in the application by authorized users to create named Roles that can be assigned to Users as needed. Roles can be created as needed to support the users of the system and the roles they perform within the organization.
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Role.
      name:
        type: string
        description: The name of the Role, as established by the user creating the role.
      description:
        type: string
        description: A description of the role as set by the user creating&#x2F;updating the role.
  UserRole:
    type: object
    description: A link defining the Roles associated with each User.
    required:
      - id
      - userId
      - roleId
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a UserRole.
      userId:
        $ref: '#/definitions/User'
        description: A foreign key reference to a User.
      roleId:
        $ref: '#/definitions/Role'
        description: A foreign key reference to a Role.
  Permission:
    type: object
    description: The set of permissions defined in the application. Each permission is given a name and triggers some behavior defined in the application. For example, a permission might allow users to see data or to have access to functionality restricted to users without that permission. Permissions are created as needed to the application and are added to the permissions table by data migrations executed at the time the software that uses the permission is deployed.
    required:
      - id
      - code
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Permission.
      code:
        type: string
        description: The name of the permission referenced in the software of the application.
      name:
        type: string
        description: The &#39;user friendly&#39; name of the permission exposed to the user selecting the permissions to be included in a Role.
      description:
        type: string
        description: A description of the purpose of the permission and exposed to the user selecting the permissions to be included in a Role.
  RolePermission:
    type: object
    description: The collection of permissions included in a role.
    required:
      - id
      - roleId
      - permissionId
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Role Permission.
      roleId:
        $ref: '#/definitions/Role'
        description: A foreign key reference to a Role.
      permissionId:
        $ref: '#/definitions/Permission'
        description: A foreign key reference to a Permission.
  Audit:
    type: object
    description: Server generated audit log.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for an Audit.
      appCreateTimestamp:
        type: string
        format: date-time
        description: The date and time of the application action that created the record. .
      appCreateUserid:
        type: string
        description: The user account name of the application user who performed the action that created the record (e.g. JSMITH). This value is not preceded by the directory name. .
      appCreateUserGuid:
        type: string
        description: The Globally Unique Identifier of the application user who performed the action that created the record. This value must be non-NULL if APP_CREATE_USER_DIRECTORY is &#39;IDIR&#39; or &#39;BCEID&#39;, but it must be NULL if APP_CREATE_USER_DIRECTORY is &#39;ORACLE&#39;. APP.
      appCreateUserDirectory:
        type: string
        description: The directory in which APP_CREATE_USERID is defined. Valid values are &#39;IDIR&#39;, &#39; BCEID&#39; or &#39;ORACLE&#39;. .
      appLastUpdateTimestamp:
        type: string
        format: date-time
        description: The date and time of the application action that created or last updated the record.
      appLastUpdateUserid:
        type: string
        description: The Globally Unique Identifier of the application user who performed the action that created the record. This value must be non-NULL if APP_CREATE_USER_DIRECTORY is &#39;IDIR&#39; or &#39;BCEID&#39;, but it must be NULL if APP_CREATE_USER_DIRECTORY is &#39;ORACLE&#39;. APP.
      appLastUpdateUserGuid:
        type: string
        description: The Globally Unique Identifier of the application user who performed the action that created or last updated the record. This value must be non-NULL if APP_CREATE_USER_DIRECTORY is &#39;IDIR&#39; or &#39;BCEID&#39;, but it must be NULL if APP_CREATE_USER_DIRECTORY is &#39;ORACLE&#39;. .
      appLastUpdateUserDirectory:
        type: string
        description: The directory in which APP_LAST_UPDATE_USERID is defined. Valid values are &#39;IDIR&#39;, &#39; BCEID&#39; or &#39;ORACLE&#39;. .
      entityName:
        type: string
        description: The name of the entity that has changed.
      entityId:
        format: int32
        type: integer
        description: The primary key in the entity that has changed.
      propertyName:
        type: string
        description: The property that has changed.
      oldValue:
        type: string
        description: The old value.
      newValue:
        type: string
        description: The new value.
      isDelete:
        type: boolean
        description: If true the record was deleted.
