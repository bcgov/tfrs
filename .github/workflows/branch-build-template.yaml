
name: Branch Build Template

on:
  workflow_call:
    inputs:
      branch-name: # sample value: main-release-jan-2024
        required: true
        type: string
    secrets:
      tools-namespace:
        required: true    
      openshift-server:
         required: true 
      openshift-token:   
         required: true       
        
env:
  GIT_URL: https://github.com/bcgov/tfrs.git 
  
jobs:

  # build-backend:

  #   name: Build TFRS Backend on Openshift
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60

  #   steps:

  #     - name: Check out repository
  #       uses: actions/checkout@v3.5.3
  #       with:
  #         ref: ${{ inputs.branch-name }}

  #     - name: Log in to Openshift
  #       uses: redhat-actions/oc-login@v1.2
  #       with:
  #         openshift_server_url: ${{ secrets.openshift-server }}
  #         openshift_token: ${{ secrets.openshift-token }}
  #         insecure_skip_tls_verify: true
  #         namespace: ${{ secrets.tools-namespace }}

  #     - name: Build tfrs Backend
  #       run: |
  #         cd openshift-v4/templates/backend
  #         oc process -f ./backend-bc.yaml NAME=tfrs \
  #           SUFFIX=-build-${{ inputs.branch-name}} \
  #           VERSION=build-${{ inputs.branch-name }} \
  #           GIT_URL=${{ env.GIT_URL }} \
  #           GIT_REF=${{ inputs.branch-name }} \
  #           | oc apply --wait=true -f - -n ${{ secrets.tools-namespace }}
  #         oc cancel-build bc/tfrs-backend-build-${{ inputs.branch-name}} -n ${{ secrets.tools-namespace }} || true
  #         oc start-build --wait=true tfrs-backend-build-${{ inputs.branch-name}} -n ${{ secrets.tools-namespace }}

  # build-frontend:

  #   name: Build TFRS Frontend on Openshift
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60

  #   steps:

  #     - name: Check out repository
  #       uses: actions/checkout@v3.5.3
  #       with:
  #         ref: ${{ inputs.branch-name }}

  #     - name: Log in to Openshift
  #       uses: redhat-actions/oc-login@v1.2
  #       with:
  #         openshift_server_url: ${{ secrets.openshift-server }}
  #         openshift_token: ${{ secrets.openshift-token }}
  #         insecure_skip_tls_verify: true
  #         namespace: ${{ secrets.tools-namespace }}

  #     - name: Build TFRS Frontend
  #       run: |
  #         cd openshift-v4/templates/frontend
  #         oc process -f ./frontend-bc-docker.yaml NAME=tfrs \
  #           SUFFIX=-build-${{ inputs.branch-name}} \
  #           VERSION=build-${{ inputs.branch-name }} \
  #           GIT_URL=${{ env.GIT_URL }} \
  #           GIT_REF=${{ inputs.branch-name }} \
  #           | oc apply --wait=true -f - -n ${{ secrets.tools-namespace }}
  #         oc cancel-build bc/tfrs-frontend-build-${{ inputs.branch-name}} -n ${{ secrets.tools-namespace }} || true
  #         oc start-build --wait=true tfrs-frontend-build-${{ inputs.branch-name}} -n ${{ secrets.tools-namespace }}

  # build-celery:

  #   name: Build TFRS Celery on Openshift
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60

  #   steps:

  #     - name: Check out repository
  #       uses: actions/checkout@v3.5.3
  #       with:
  #         ref: ${{ inputs.branch-name }}

  #     - name: Log in to Openshift
  #       uses: redhat-actions/oc-login@v1.2
  #       with:
  #         openshift_server_url: ${{ secrets.openshift-server }}
  #         openshift_token: ${{ secrets.openshift-token }}
  #         insecure_skip_tls_verify: true
  #         namespace: ${{ secrets.tools-namespace }}

  #     - name: Build TFRS Celery
  #       run: |
  #         cd openshift-v4/templates/celery
  #         oc process -f ./celery-bc.yaml NAME=tfrs \
  #           SUFFIX=-build-${{ inputs.branch-name}} \
  #           VERSION=build-${{ inputs.branch-name }} \
  #           GIT_URL=${{ env.GIT_URL }} \
  #           RELEASE_BRANCH=${{ inputs.branch-name}} \
  #           | oc apply --wait=true -f - -n ${{ secrets.tools-namespace }}
  #         oc cancel-build bc/tfrs-celery-build-${{ inputs.branch-name}} -n ${{ secrets.tools-namespace }} || true
  #         oc start-build --wait=true tfrs-celery-build-${{ inputs.branch-name}} -n ${{ secrets.tools-namespace }}

  # build-scan-coordinator:

  #   name: Build TFRS Scan Coordinator on Openshift
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60

  #   steps:

  #     - name: Check out repository
  #       uses: actions/checkout@v3.5.3
  #       with:
  #         ref: ${{ inputs.branch-name }}

  #     - name: Log in to Openshift
  #       uses: redhat-actions/oc-login@v1.2
  #       with:
  #         openshift_server_url: ${{ secrets.openshift-server }}
  #         openshift_token: ${{ secrets.openshift-token }}
  #         insecure_skip_tls_verify: true
  #         namespace: ${{ secrets.tools-namespace }}

  #     - name: Build TFRS scan-coordinator
  #       run: |
  #         cd openshift-v4/templates/scan-coordinator
  #         oc process -f ./scan-coordinator-bc.yaml NAME=tfrs \
  #           SUFFIX=-build-${{ inputs.branch-name}} \
  #           VERSION=build-${{ inputs.branch-name }} \
  #           GIT_URL=${{ env.GIT_URL }} \
  #           GIT_REF=${{ inputs.branch-name }} \
  #           | oc apply --wait=true -f - -n ${{ secrets.tools-namespace }}
  #         oc cancel-build bc/tfrs-scan-coordinator-build-${{ inputs.branch-name}} -n ${{ secrets.tools-namespace }} || true
  #         oc start-build --wait=true tfrs-scan-coordinator-build-${{ inputs.branch-name}} -n ${{ secrets.tools-namespace }}          

  build-scan-coordinator:

    name: Build TFRS Scan Coordinator on Openshift
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:

      - name: Check out repository
        uses: actions/checkout@v3.5.3
        with:
          ref: ${{ inputs.branch-name }}

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.2
        with:
          openshift_server_url: ${{ secrets.openshift-server }}
          openshift_token: ${{ secrets.openshift-token }}
          insecure_skip_tls_verify: true
          namespace: ${{ secrets.tools-namespace }}

      - name: Build TFRS scan-coordinator
        run: |
          cd openshift-v4/templates/scan-coordinator
          oc process -f ./scan-coordinator-bc.yaml NAME=tfrs \
            SUFFIX=-build-${{ inputs.branch-name}} \
            VERSION=build-${{ inputs.branch-name }} \
            GIT_URL=${{ env.GIT_URL }} \
            GIT_REF=${{ inputs.branch-name }} \
            | oc apply --wait=true -f - -n ${{ secrets.tools-namespace }}
          oc cancel-build bc/tfrs-scan-coordinator-build-${{ inputs.branch-name}} -n ${{ secrets.tools-namespace }} || true
          oc start-build --wait=true tfrs-scan-coordinator-build-${{ inputs.branch-name}} -n ${{ secrets.tools-namespace }}                    