name: TFRS Jan-2025 build on Dev

on:
  push:
    branches: [new-pipeline-jan-2025]
    # paths:
    #   - frontend/**
    #   - backend/**
  workflow_dispatch:

env:
  GIT_URL: https://github.com/bcgov/tfrs.git
  TOOLS_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-tools
  DEV_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-dev
  GIT_REF: "new-pipeline-jan-2025"
  BUILD_SUFFIX: "jan-2025"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # build-backend:
  #   name: Build tfrs Backend
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60

  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v4.1.1
  #       with:
  #         ref: new-pipeline-jan-2025

  #     - name: Log in to Openshift
  #       uses: redhat-actions/oc-login@v1.3
  #       with:
  #         openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
  #         openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
  #         insecure_skip_tls_verify: true
  #         namespace: ${{ env.TOOLS_NAMESPACE }}

  #     - name: Build tfrs Backend
  #       run: |
  #         cd openshift-v4/templates/backend
  #         oc process -f ./backend-bc-docker.yaml NAME=tfrs SUFFIX=-${{ env.BUILD_SUFFIX }} VERSION=${{ env.BUILD_SUFFIX }} GIT_URL=${{ env.GIT_URL }} GIT_REF=${{ env.GIT_REF }} | oc apply --wait=true -f - -n ${{ env.TOOLS_NAMESPACE }}
  #         sleep 2s
  #         for build in $(oc -n ${{ env.TOOLS_NAMESPACE }} get builds -l buildconfig=tfrs-backend-${{ env.BUILD_SUFFIX }} -o jsonpath='{.items[?(@.status.phase=="Running")].metadata.name}'); do
  #           echo "canceling $build"
  #           oc -n ${{ env.TOOLS_NAMESPACE }} cancel-build $build
  #         done
  #         sleep 2s
  #         oc -n ${{ env.TOOLS_NAMESPACE }} start-build tfrs-backend-${{ env.BUILD_SUFFIX }} --wait=true
  #         sleep 2s
  #         oc tag ${{ env.TOOLS_NAMESPACE }}/tfrs-backend:${{ env.BUILD_SUFFIX }} ${{ env.DEV_NAMESPACE }}/tfrs-backend:${{ env.BUILD_SUFFIX }}

  # build-frontend:
  #   name: Build TFRS Frontend
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60

  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v4.1.1
  #       with:
  #         ref: new-pipeline-jan-2025

  #     - name: Log in to Openshift
  #       uses: redhat-actions/oc-login@v1.3
  #       with:
  #         openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
  #         openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
  #         insecure_skip_tls_verify: true
  #         namespace: ${{ env.TOOLS_NAMESPACE }}

  #     - name: Build TFRS Frontend
  #       run: |
  #         cd openshift-v4/templates/frontend
  #         oc process -f ./frontend-bc-docker.yaml NAME=tfrs SUFFIX=-${{ env.BUILD_SUFFIX }} VERSION=${{ env.BUILD_SUFFIX }} GIT_URL=${{ env.GIT_URL }} GIT_REF=${{ env.GIT_REF }} | oc apply --wait=true -f - -n ${{ env.TOOLS_NAMESPACE }}
  #         sleep 2s
  #         for build in $(oc -n ${{ env.TOOLS_NAMESPACE }} get builds -l buildconfig=tfrs-frontend-${{ env.BUILD_SUFFIX }} -o jsonpath='{.items[?(@.status.phase=="Running")].metadata.name}'); do
  #           echo "canceling $build"
  #           oc -n ${{ env.TOOLS_NAMESPACE }} cancel-build $build
  #         done
  #         sleep 2s
  #         oc -n ${{ env.TOOLS_NAMESPACE }} start-build tfrs-frontend-${{ env.BUILD_SUFFIX }} --wait=true
  #         sleep 2s
  #         oc tag ${{ env.TOOLS_NAMESPACE }}/tfrs-frontend:${{ env.BUILD_SUFFIX }} ${{ env.DEV_NAMESPACE }}/tfrs-frontend:${{ env.BUILD_SUFFIX }}

  build-celery:
    name: Build TFRS Celery
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ env.GIT_REF }}

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.3
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}

      - name: Build TFRS Celery
        run: |
          cd openshift-v4/templates/celery
          oc process -f ./celery-bc-docker.yaml NAME=tfrs SUFFIX=-${{ env.BUILD_SUFFIX }} VERSION=${{ env.BUILD_SUFFIX }} GIT_URL=${{ env.GIT_URL }} GIT_REF=${{ env.GIT_REF }} | oc apply --wait=true -f - -n ${{ env.TOOLS_NAMESPACE }}
          sleep 2s
          for build in $(oc -n ${{ env.TOOLS_NAMESPACE }} get builds -l buildconfig=tfrs-celery-${{ env.BUILD_SUFFIX }} -o jsonpath='{.items[?(@.status.phase=="Running")].metadata.name}'); do
            echo "canceling $build"
            oc -n ${{ env.TOOLS_NAMESPACE }} cancel-build $build
          done
          sleep 2s
          oc -n ${{ env.TOOLS_NAMESPACE }} start-build tfrs-celery-${{ env.BUILD_SUFFIX }} --wait=true
          sleep 2s
          oc tag ${{ env.TOOLS_NAMESPACE }}/tfrs-celery:${{ env.BUILD_SUFFIX }} ${{ env.DEV_NAMESPACE }}/tfrs-celery:${{ env.BUILD_SUFFIX }}
