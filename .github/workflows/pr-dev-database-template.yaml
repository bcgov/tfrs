name: PR Dev Database Template

on:
  workflow_call:
    inputs:
      # pull request number
      pr-number:
        required: true
        type: string
      # the suffix will be appended to tfrs-spilo, same values: -1234, -jan-1242
      dev-suffix:
        required: true
        type: string        
    secrets:
      dev-namespace:
        required: true
      tfrs-dev-username:
        required: true
      tfrs-dev-password:
        required: true       
      openshift-server:
         required: true 
      openshift-token:   
         required: true       
  
jobs:

  database:

    name: Start Database
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:

      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ inputs.pr-number }}/head

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.2
        with:
          openshift_server_url: ${{ secrets.openshift-server }}
          openshift_token: ${{ secrets.openshift-token }}
          insecure_skip_tls_verify: true
          namespace: ${{ secrets.dev-namespace }}    

      - name: Setup Database
        shell: bash {0}
        run: |
          cd charts/tfrs-spilo
          helm dependency build
          helm status -n ${{ secrets.dev-namespace }} tfrs-spilo${{ inputs.dev-suffix }}
          if [ $? -eq 0 ]; then
            echo "tfrs-spilo${{ inputs.dev-suffix }} exists already"
          else
            echo "Installing tfrs-spilo${{ inputs.dev-suffix }}"
            helm install -n ${{ secrets.dev-namespace }} -f ./values-dev.yaml --wait tfrs-spilo${{ inputs.dev-suffix }} .
            oc -n ${{ secrets.dev-namespace }} wait --for=condition=Ready pod/tfrs-spilo${{ inputs.dev-suffix }}-0
            oc -n ${{ secrets.dev-namespace }} exec tfrs-spilo${{ inputs.dev-suffix }}-0 -- psql -c "create user \"${{ secrets.tfrs-dev-username }}\" WITH PASSWORD '${{ secrets.tfrs-dev-password }}'" || true
            oc -n ${{ secrets.dev-namespace }} exec tfrs-spilo${{ inputs.dev-suffix }}-0 -- psql -c "create database tfrs owner ${{ secrets.tfrs-dev-username }} ENCODING 'UTF8' LC_COLLATE = 'en_US.UTF-8' LC_CTYPE = 'en_US.UTF-8'" || true
            oc -n ${{ secrets.dev-namespace }} exec tfrs-spilo${{ inputs.dev-suffix }}-0 -- psql -c "ALTER SYSTEM SET log_filename='postgresql-%H.log'" || true
            oc -n ${{ secrets.dev-namespace }} exec tfrs-spilo${{ inputs.dev-suffix }}-0 -- psql -c "ALTER SYSTEM SET log_connections='off'" || true
            oc -n ${{ secrets.dev-namespace }} exec tfrs-spilo${{ inputs.dev-suffix }}-0 -- psql -c "ALTER SYSTEM SET log_disconnections='off'" || true
            oc -n ${{ secrets.dev-namespace }} exec tfrs-spilo${{ inputs.dev-suffix }}-0 -- psql -c "ALTER SYSTEM SET log_checkpoints='off'" || true
            oc -n ${{ secrets.dev-namespace }} exec tfrs-spilo${{ inputs.dev-suffix }}-0 -- psql -c "select pg_reload_conf()" || true
          fi

