name: PR Build Template

#

on:
  workflow_dispatch:
  #workflow_call:
    inputs:
      pr-number:
        required: true
        type: string
        default: 2411
        # sample value: 2411
      release-branch:
        required: true
        type: string      
        default: main-release-jan-2024
        # sample value: main-release-jan-2024
    # secrets:
    #   tools-namespace:
    #     required: true    
    #   openshift-server:
    #      required: true 
    #   openshift-token:   
    #      required: true       
        
env:
  GIT_URL: https://github.com/bcgov/tfrs.git 

  # sample value: -build-545
  build-suffix: -build-${{ github.event.inputs.pr-number }}  

  # sample value: build-release-1.18.0-545
  build-image-tag-name:  build-${{ github.event.inputs.release-branch }}-${{ github.event.inputs.pull_request }}
  
jobs:

  build-backend:

    name: Build TFRS Backend on Openshift
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:

      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ inputs.pr-number }}/head

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.2
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-tools

      - name: Build TFRS Backend
        run: |
          cd openshift-v4/templates/backend
          oc process -f ./backend-bc.yaml NAME=tfrs SUFFIX=${{ env.build-suffix }} VERSION=${{ env.build-image-tag-name }} GIT_URL=${{ env.GIT_URL }} GIT_REF=refs/pull/${{ inputs.pr-number }}/head | oc apply --wait=true -f - -n ${{ secrets.tools-namespace }}
          oc cancel-build bc/tfrs-backend${{ env.build-suffix }}
          oc start-build --wait=true tfrs-backend${{ env.build-suffix }}

  # build-frontend:

  #   name: Build TFRS Frontend on Openshift
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60

  #   steps:

  #     - name: Check out repository
  #       uses: actions/checkout@v3
  #       with:
  #         ref: refs/pull/${{ inputs.pr-number }}/head

  #     - name: Log in to Openshift
  #       uses: redhat-actions/oc-login@v1.2
  #       with:
  #         openshift_server_url: ${{ secrets.openshift-server }}
  #         openshift_token: ${{ secrets.openshift-token }}
  #         insecure_skip_tls_verify: true
  #         namespace: ${{ secrets.tools-namespace }}

  #     - name: Build TFRS Frontend
  #       run: |
  #         cd openshift-v4/templates/frontend
  #         oc process -f ./frontend-bc-docker.yaml NAME=tfrs SUFFIX=${{ env.build-suffix }} VERSION=${{ env.build-image-tag-name }} GIT_URL=${{ env.GIT_URL }} GIT_REF=refs/pull/${{ inputs.pr-number }}/head | oc apply --wait=true -f - -n ${{ secrets.tools-namespace }}
  #         oc cancel-build bc/tfrs-frontend${{ env.build-suffix }}
  #         oc start-build --wait=true tfrs-frontend${{ env.build-suffix }}

  # build-celery:

  #   name: Build TFRS Celery on Openshift
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60

  #   steps:

  #     - name: Check out repository
  #       uses: actions/checkout@v3
  #       with:
  #         ref: refs/pull/${{ inputs.pr-number }}/head

  #     - name: Log in to Openshift
  #       uses: redhat-actions/oc-login@v1.2
  #       with:
  #         openshift_server_url: ${{ secrets.openshift-server }}
  #         openshift_token: ${{ secrets.openshift-token }}
  #         insecure_skip_tls_verify: true
  #         namespace: ${{ secrets.tools-namespace }}

  #     - name: Build TFRS Celery
  #       run: |
  #         cd openshift-v4/templates/celery
  #         oc process -f ./celery-bc.yaml NAME=tfrs SUFFIX=${{ env.build-suffix }} VERSION=${{ env.build-image-tag-name }} GIT_URL=${{ env.GIT_URL }} RELEASE_BRANCH=refs/pull/${{ inputs.pr-number }}/head | oc apply --wait=true -f - -n ${{ secrets.tools-namespace }}
  #         oc cancel-build bc/tfrs-frontend${{ env.build-suffix }}
  #         oc start-build --wait=true tfrs-frontend${{ env.build-suffix }}
