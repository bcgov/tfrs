

name: PR Dev Deploy Template

on:
  workflow_call:
    inputs:
      # suffix is in format of -jan-1923
      suffix:
        required: true
        type: string       
      # when build pull request, the sample value is refs/pull/2023/head
      checkout-ref:
        required: true
        type: string    
      # database-service-host-name, sample tfrs-spilo-dev-1988
      database-service-host-name:
        required: true
        type: string
    secrets:
      tools-namespace:
        required: true
      namespace:
        required: true
      openshift-server:
         required: true 
      openshift-token:   
         required: true       
  
jobs:

  deploy:

    name: Deploy tfrs
    runs-on: ubuntu-latest
    timeout-minutes: 60
 
    steps:

      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.checkout-ref }}

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.2
        with:
          openshift_server_url: ${{ secrets.openshift-server }}
          openshift_token: ${{ secrets.openshift-token }}
          insecure_skip_tls_verify: true
          namespace: ${{ secrets.tools-namespace }}  

      - name: Create vhost on Rabbitmq Dev
        shell: bash {0}
        run: |
          oc -n ${{ secrets.namespace }} exec tfrs-rabbitmq-0 -- rabbitmqctl add_vhost tfrs-dev${{ inputs.suffix }}-vhost
          oc -n ${{ secrets.namespace }} exec tfrs-rabbitmq-0 -- rabbitmqctl set_permissions --vhost tfrs-dev${{ inputs.suffix }}-vhost tfrs ".*" ".*" ".*"
      
      - name: Deploy tfrs-frontend
        shell: bash {0}
        run: |
          oc tag ${{ secrets.tools-namespace }}/tfrs-frontend:build${{ inputs.suffix }} ${{ secrets.namespace }}/tfrs-frontend:dev${{ inputs.suffix }}
          cd charts/tfrs-apps/charts/tfrs-frontend
          helm status -n ${{ secrets.namespace }} tfrs-frontend-dev${{ inputs.suffix }}
          if [ $? -eq 0 ]; then
            echo "tfrs-frontend-dev${{ inputs.suffix }} release exists already"
            helm upgrade \
              --set frontendImageTagName=dev${{ inputs.suffix }} \
              --set suffix=-dev${{ inputs.suffix }} \
              --set namespace=${{ secrets.namespace }} \
              --set envName=dev \
              -n ${{ secrets.namespace }} -f ./values-dev-jan.yaml tfrs-frontend-dev${{ inputs.suffix }} .
          else
            echo "tfrs-frontend-dev${{ inputs.suffix }} release does not exist"
            helm install \
              --set frontendImageTagName=dev${{ inputs.suffix }} \
              --set suffix=-dev${{ inputs.suffix }} \
              --set namespace=${{ secrets.namespace }} \
              --set envName=dev \
              -n ${{ secrets.namespace }} -f ./values-dev-jan.yaml tfrs-frontend-dev${{ inputs.suffix }} .
          fi
          
      - name: Deploy tfrs-backend
        shell: bash {0}
        run: |
          oc tag ${{ secrets.tools-namespace }}/tfrs-backend:build${{ inputs.suffix }} ${{ secrets.namespace }}/tfrs-backend:dev${{ inputs.suffix }}
          cd charts/tfrs-apps/charts/tfrs-backend
          helm status -n ${{ secrets.namespace }} tfrs-backend-dev${{ inputs.suffix }}
          if [ $? -eq 0 ]; then
            echo "tfrs-backend-dev${{ inputs.suffix }} release exists already"
            helm upgrade \
              --set backendImageTagName=dev${{ inputs.suffix }} \
              --set suffix=-dev${{ inputs.suffix }} \
              --set namespace=${{ secrets.namespace }} \
              --set envName=dev \
              --set databaseServiceHostName=${{ inputs.database-service-host-name }} \
              --set rabbitmqVHost=tfrs-dev${{ inputs.suffix }}-vhost \
              -n ${{ secrets.namespace }} -f ./values-dev-jan.yaml tfrs-backend-dev${{ inputs.suffix }} .
          else
            echo "tfrs-backend-dev${{ inputs.suffix }} release does not exist"
            helm install \
              --set backendImageTagName=dev${{ inputs.suffix }} \
              --set suffix=dev${{ inputs.suffix }} \
              --set namespace=${{ secrets.namespace }} \
              --set envName=dev \
              --set databaseServiceHostName=${{ inputs.database-service-host-name }} \
              --set rabbitmqVHost=tfrs-dev${{ inputs.suffix }}-vhost \
              -n ${{ secrets.namespace }} -f ./values-dev-jan.yaml tfrs-backend-dev${{ inputs.suffix }} .
          fi
          
      - name: Deploy tfrs-celery
        shell: bash {0}
        run: |
          oc tag ${{ secrets.tools-namespace }}/tfrs-celery:build${{ inputs.suffix }} ${{ secrets.namespace }}/tfrs-celery:dev${{ inputs.suffix }}
          cd charts/tfrs-apps/charts/tfrs-celery
          helm status -n ${{ secrets.namespace }} tfrs-celery-dev${{ inputs.suffix }}
          if [ $? -eq 0 ]; then
            echo "tfrs-celery-dev${{ inputs.suffix }} release exists already"
            helm upgrade \
              --set celeryImageTagName=dev${{ inputs.suffix }} \
              --set suffix=-dev${{ inputs.suffix }} \
              --set namespace=${{ secrets.namespace }} \
              --set envName=dev \
              --set databaseServiceHostName=${{ inputs.database-service-host-name }} \
              --set rabbitmqVHost=tfrs-dev${{ inputs.suffix }}-vhost \
              -n ${{ secrets.namespace }} -f ./values-dev-jan.yaml tfrs-celery-dev${{ inputs.suffix }} .
          else
            echo "tfrs-celery-dev${{ inputs.suffix }} release does not exist"
            helm install \
              --set celeryImageTagName=${{ inputs.env-name }}-${{ inputs.suffix }} \
              --set suffix=-dev${{ inputs.suffix }} \
              --set namespace=${{ secrets.namespace }} \
              --set envName=dev \
              --set databaseServiceHostName=${{ inputs.database-service-host-name }} \
              --set rabbitmqVHost=tfrs-dev${{ inputs.suffix }}-vhost \
              -n ${{ secrets.namespace }} -f ./values-dev-jan.yaml tfrs-celery-dev${{ inputs.suffix }} .
          fi

      - name: Deploy tfrs-scan-handler
        shell: bash {0}
        run: |
          oc tag ${{ secrets.tools-namespace }}/tfrs-scan-handler:build${{ inputs.suffix }} ${{ secrets.namespace }}/tfrs-scan-handler:dev${{ inputs.suffix }}
          cd charts/tfrs-apps/charts/tfrs-scan-handler
          helm status -n ${{ secrets.namespace }} tfrs-scan-handler-dev${{ inputs.suffix }}
          if [ $? -eq 0 ]; then
            echo "tfrs-scan-handler-dev${{ inputs.suffix }} release exists already"
            helm upgrade \
              --set scanHandlerImageTagName=dev-${{ inputs.suffix }} \
              --set suffix=-dev${{ inputs.suffix }} \
              --set namespace=${{ secrets.namespace }} \
              --set envName=dev \
              --set databaseServiceHostName=${{ inputs.database-service-host-name }} \
              --set rabbitmqVHost=tfrs-dev${{ inputs.suffix }}-vhost  \
              -n ${{ secrets.namespace }} -f ./values-dev-jan.yaml tfrs-scan-handler-dev${{ inputs.suffix }} .
          else
            echo "tfrs-scan-handler-dev${{ inputs.suffix }} release does not exist"
            helm install \
              --set scanHandlerImageTagName=dev-${{ inputs.suffix }} \
              --set suffix=dev${{ inputs.suffix }} \
              --set namespace=${{ secrets.namespace }} \
              --set envName=dev \
              --set databaseServiceHostName=${{ inputs.database-service-host-name }} \
              --set rabbitmqVHost=tfrs-dev${{ inputs.suffix }}-vhost \
              -n ${{ secrets.namespace }} -f ./values-dev-jan.yaml tfrs-scan-handler-dev${{ inputs.suffix }} .
          fi

      - name: Deploy tfrs-scan-coordinator
        shell: bash {0}
        run: |
          oc tag ${{ secrets.tools-namespace }}/tfrs-scan-coordinator:build${{ inputs.suffix}} ${{ secrets.namespace }}/tfrs-scan-coordinator:dev${{ inputs.suffix}}
          cd charts/tfrs-apps/charts/tfrs-scan-coordinator
          helm status -n ${{ secrets.namespace }} tfrs-scan-coordinator-dev${{ inputs.suffix }}
          if [ $? -eq 0 ]; then
            echo "tfrs-scan-coordinator-dev${{ inputs.suffix }} release exists already"
            helm upgrade \
              --set scanCoordinatorImageTagName=dev${{ inputs.suffix}} \
              --set suffix=-dev${{ inputs.suffix }} \
              --set namespace=${{ secrets.namespace }} \
              --set envName=dev \
              --set rabbitmqVHost=tfrs-dev${{ inputs.suffix }}-vhost \
              -n ${{ secrets.namespace }} -f ./values-dev-jan.yaml tfrs-scan-coordinator-dev${{ inputs.suffix }} .
          else
            echo "tfrs-scan-coordinator${{ inputs.suffix }} release does not exist"
            helm install \
              --set scanCoordinatorImageTagName=dev${{ inputs.suffix}} \
              --set suffix=-dev${{ inputs.suffix }} \
              --set namespace=${{ secrets.namespace }} \
              --set envName=dev \
              --set rabbitmqVHost=tfrs-dev${{ inputs.suffix }}-vhost \
              -n ${{ secrets.namespace }} -f ./values-dev-jan.yaml tfrs-scan-coordinator-dev${{ inputs.suffix }} .
          fi                  