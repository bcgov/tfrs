#!/bin/bash

# Prevent running assemble in builders different than official STI image.
# The official nodejs:0.10-onbuild already run npm install and use different
# application folder.
# if /user/src/app directory exists, quit this script with status 0
[ -d "/usr/src/app" ] && exit 0

# from "help set", it says "-e  Exit immediately if a command exits with a non-zero status."
set -e

# FIXME: Linking of global modules is disabled for now as it causes npm failures
#        under RHEL7
# Global modules good to have
# npmgl=$(grep "^\s*[^#\s]" ../etc/npm_global_module_list | sort -u)
# Available global modules; only match top-level npm packages
#global_modules=$(npm ls -g 2> /dev/null | perl -ne 'print "$1\n" if /^\S+\s(\S+)\@[\d\.-]+/' | sort -u)
# List all modules in common
#module_list=$(/usr/bin/comm -12 <(echo "${global_modules}") | tr '\n' ' ')
# Link the modules
#npm link $module_list

# there are options which modify the behavior of bash, they can be set or unset using shopt
# -s means If optnames are specified, set those options. If no optnames are specified, list all options that are currently set.
# -u can Unset optnames.
shopt -s dotglob

echo "---> Restore build artifacts ..."
# not executed
# if directory /tmp/artifacts/ exists, goes inside to then block
if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
	echo "---> Found build artifacts ..."
    mv /tmp/artifacts/* ./
fi

# tfrs/frontend/* were copied at /tmp/src, copy /tmp/src/* into /opt/app-root/src
echo "---> Installing application source ..."
cp -rl /tmp/src/* ./ && rm -r /tmp/src/*

echo "---> Checking for artifacts and other goodies..."
ls -la /tmp

## Setup http/https proxy if needed

# not executed
if [ ! -z $HTTP_PROXY ]; then
	echo "---> Setting npm http proxy to $HTTP_PROXY"
	npm config set proxy $HTTP_PROXY
fi

# not executed
if [ ! -z $http_proxy ]; then
	echo "---> Setting npm http proxy to $http_proxy"
	npm config set proxy $http_proxy
fi

# not executed
if [ ! -z $HTTPS_PROXY ]; then
	echo "---> Setting npm https proxy to $HTTPS_PROXY"
	npm config set https-proxy $HTTPS_PROXY
fi

# not executed
if [ ! -z $https_proxy ]; then
	echo "---> Setting npm https proxy to $https_proxy"
	npm config set https-proxy $https_proxy
fi

# Change the npm registry mirror if provided
# not executed
if [ -n "$NPM_MIRROR" ]; then
	npm config set registry $NPM_MIRROR
fi

echo "---> Building your Node application from source"

# pull node packages from artifactory
npm cache clean --force
npm config set registry https://artifacts.developer.gov.bc.ca/artifactory/api/npm/npm-remote/
curl -u $ARTIFACTORY_USER:$ARTIFACTORY_PASSWORD https://artifacts.developer.gov.bc.ca/artifactory/api/npm/auth >> ~/.npmrc

# -d means --loglevel info
npm install -d

# fix vulnerabilities
# npm audit fix

# run webpack
# create public/build folder under /opt/app-root/src
# /opt/app-root/src/public/build has bundle.js and tokenRenewl.js
npm run build

# Fix source directory permissions
fix-permissions ./
