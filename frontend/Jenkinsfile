node('maven') {
	
    stage('Build') {
        echo "Building..."
	openshiftBuild bldCfg: 'client-angular-app-build', showBuildLogs: 'true'
        openshiftBuild bldCfg: 'client', showBuildLogs: 'true'
        echo ">> Getting Image Hash"
        IMAGE_HASH = sh (
            script: 'oc get istag client:latest -o template --template="{{.image.dockerImageReference}}"|awk -F ":" \'{print $3}\'',
 	            returnStdout: true).trim()
        echo ">> IMAGE_HASH: $IMAGE_HASH"
    }

    stage('Deploy on Test') {
	input "Deploy to Test?"
        echo "Deploying to Test..."
        openshiftTag destStream: 'client', verbose: 'true', destTag: 'test', srcStream: 'client', srcTag: "${IMAGE_HASH}"
        openshiftVerifyDeployment depCfg: 'client', namespace: 'mem-tfrs-test', replicaCount: 1, verbose: 'false'
    }
	
    stage('Deploy on Prod') {
	 input "Deploy to Prod?"
        echo "Deploying to Prod..."
        openshiftTag destStream: 'client', verbose: 'true', destTag: 'prod', srcStream: 'client', srcTag: "${IMAGE_HASH}"
        openshiftVerifyDeployment depCfg: 'client', namespace: 'mem-tfrs-prod', replicaCount: 1, verbose: 'false'
    }	
}
