#!/bin/bash -e
#
# S2I assemble script for the 'caddy-s2i-builder' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

# If the 'caddy-s2i-builder' assemble script is executed
# with the '-h' flag, print the usage.
if [[ "$1" == "-h" ]]; then
	exec /usr/libexec/s2i/usage
fi

# Restore artifacts from the previous build (if they exist).
#
if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> Restoring build artifacts..."
  shopt -s dotglob
  mv /tmp/artifacts/* ./
  shopt -u dotglob
fi

echo "---> Installing dependencies..."

pushd /tmp/src/

echo "Source directory contents ..."
ls -lah

if [ -f "package-lock.json" ]; then
  npm ci
else
  npm i 
fi

echo "---> Running build ..."

npm run build --if-present

popd

echo "---> Installing build artifacts..."

if [ -d "/tmp/src/build" ]; then
  echo "Copying artifacts from build/"
  cp -Rf /tmp/src/build/. ./
elif [ -d "/tmp/src/public" ]; then
  echo "Copying artifacts from public/"
  cp -Rf /tmp/src/public/. ./
elif [ -d "/tmp/src/dist" ]; then
  echo "Copying artifacts from dist/"
  cp -Rf /tmp/src/dist/. ./
else

cat <<EOF
*** WARNING ***
I wasn't able to determine what build artifacts to 
copy. In order, I tried:
  build/
  public/
  dist/

You may need to write your own 'assemble' script and
put it in your project in the directory 's2i/bin'; this
will override this script and you can do as you please.

Learn more about s2i builds here:
https://docs.openshift.com/container-platform/3.11/creating_images/s2i.html
EOF

fi

echo "---> Cleanup..."

rm -rf .npm .npm-global .pki .config

echo "---> Working directory contents ..."

ls -lah

echo "---> Done!"
