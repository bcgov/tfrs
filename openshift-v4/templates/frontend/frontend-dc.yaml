---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: client-dc
  creationTimestamp:
parameters:
- name: NAME
  description: tfrs
  value: tfrs
  required: true
- name: SUFFIX
  displayName:
  description: sample is -pr-0
  required: true
- name: VERSION
  displayName:
  description:  image tag name for output
  required: true
- name: CPU_REQUEST
  displayName: Requested CPU
  description: Requested CPU
  required: true
- name: CPU_LIMIT
  displayName: CPU upper limit
  description: CPU upper limit
  required: true
- name: MEMORY_REQUEST
  displayName: Requested memory
  description: Requested memory
  required: true
- name: MEMORY_LIMIT
  displayName: Memory upper limit
  description: Memory upper limit
  required: true
- name: REPLICAS
  displayName: replicas
  description: replicas
  required: true
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the frontend image
    labels:
      shared: "true"
    creationTimestamp: null
    name: ${NAME}-frontend
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: ''
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: ${NAME}-frontend${SUFFIX}
    creationTimestamp:
    labels:
      name: ${NAME}-frontend${SUFFIX}
    annotations:
      description: Defines how to deploy the frontend
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - client
        from:
          kind: ImageStreamTag
          name: ${NAME}-frontend:${VERSION}
        lastTriggeredImage: ''
    - type: ConfigChange
    replicas: ${{REPLICAS}}
    test: false
    selector:
      name: ${NAME}-frontend${SUFFIX}
    template:
      metadata:
        name: ${NAME}-frontend${SUFFIX}
        creationTimestamp:
        labels:
          name: ${NAME}-frontend${SUFFIX}
      spec:
        volumes:
        - name: keycloak-config-data${SUFFIX}
          configMap:
            name: ${NAME}-keycloak-config${SUFFIX}
            defaultMode: 420
        containers:
        - name: client
          image: ''
          ports:
          - containerPort: 3000
            protocol: TCP
          env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          volumeMounts:
          - name: keycloak-config-data${SUFFIX}
            mountPath: /tmp/app/dist/config
          livenessProbe:
            httpGet:
              path: "/"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: "/"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
  status:
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    updatedReplicas: 0
    availableReplicas: 0
    unavailableReplicas: 0
