---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: celery-dc
  creationTimestamp:
parameters:
- name: NAME
  displayName: App name
  description: App name
  value: tfrs
  required: true
- name: SUFFIX
  displayName: suffix
  description: such as -dev-1696, -dev ane etc.
  required: true  
- name: NAMESPACE
  displayName: Environment name
  description: 'Sample values: 0ab226-dev, 0ab226-test and 0ab226-prod'
  required: true
- name: VERSION
  displayName: null
  description: image tag name for output
  required: true  
- name: ENV_NAME
  displayName: environment name
  description: such as dev, test and prod
  required: true    
- description: Starting amount of CPU the container can use.
  displayName: CPU REQUEST
  name: CPU_REQUEST
  value: '100m'
  required: true
- description: Maximum amount of CPU the container can use.
  displayName: CPU Limit
  name: CPU_LIMIT
  value: '250m'
  required: true
- description: Starting amount of memory the container can use.
  displayName: Memory Request
  name: MEMORY_REQUEST
  value: 1600Mi
  required: true
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 3Gi    
  required: true
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the celery image
    labels:
      shared: "true"
    creationTimestamp: null
    name: ${NAME}-celery
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: ''
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: ${NAME}-celery${SUFFIX}
    creationTimestamp:
    labels:
      name: ${NAME}-celery${SUFFIX}
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - celery
        from:
          kind: ImageStreamTag
          name: ${NAME}-celery:${VERSION}
        lastTriggeredImage: ''
    - type: ConfigChange
    replicas: 1
    revisionHistoryLimit: 10
    test: false
    selector:
      name: ${NAME}-celery${SUFFIX}
    template:
      metadata:
        creationTimestamp:
        labels:
          name: ${NAME}-celery${SUFFIX}
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
      spec:
        containers:
        - name: celery
          image: ''
          env:
          - name: RABBITMQ_VHOST
            value: "tfrs-vhost"
          - name: RABBITMQ_USER
            valueFrom:
              secretKeyRef:
                name: tfrs-rabbitmq-app
                key: username
          - name: RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: tfrs-rabbitmq-app
                key: password
          - name: RABBITMQ_HOST
            value: tfrs-rabbitmq.${NAMESPACE}.svc.cluster.local
          - name: RABBITMQ_PORT
            value: '5672'
          - name: DATABASE_SERVICE_NAME
            # value: patroni-master${SUFFIX}
            value: tfrs-spilo
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                # name: patroni${SUFFIX}
                name: tfrs-patroni-app
                key: app-db-name
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                # name: patroni${SUFFIX}
                name: tfrs-patroni-app
                key: app-db-username
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                # name: patroni${SUFFIX}
                name: tfrs-patroni-app
                key: app-db-password
          - name: MINIO_ENDPOINT
            valueFrom:
              secretKeyRef:
                name: tfrs-object-storage
                key: ENDPOINT
          - name: MINIO_USE_SSL
            value: 'true'
          - name: MINIO_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: tfrs-object-storage
                key: USER_ID
          - name: MINIO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: tfrs-object-storage
                key: KEY
          - name: MINIO_BUCKET_NAME
            valueFrom:
              secretKeyRef:
                name: tfrs-object-storage
                key: BUCKET
          - name: EMAIL_FROM_ADDRESS
            value: tfrs@gov.bc.ca
          - name: EMAIL_SENDING_ENABLED
            value: 'true'
          - name: SMTP_SERVER_HOST
            value: apps.smtp.gov.bc.ca
          resources:
            limits:
              cpu: 250m
              memory: 3Gi
            requests:
              cpu: 100m
              memory: 1600Mi
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
  status:
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    updatedReplicas: 0
    availableReplicas: 0
    unavailableReplicas: 0
