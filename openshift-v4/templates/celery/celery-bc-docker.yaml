---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: celery-bc
  creationTimestamp:
parameters:
  - name: NAME
    displayName:
    description: the module name entered when run yo bcdk:pipeline, which is tfrs
    required: true
  - name: SUFFIX
    displayName:
    description: sample is -pr-0
    required: true
  - name: VERSION
    displayName:
    description: image tag name for output
    required: true
  - name: GIT_URL
    displayName:
    description: tfrs repo
    required: true
  - name: GIT_REF
    displayName:
    description: tfrs repo ref
    required: true    
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Keeps track of changes in the celery image
      labels:
        shared: "true"
      creationTimestamp: null
      name: ${NAME}-celery
    spec:
      lookupPolicy:
        local: false
    status:
      dockerImageRepository: ""
  - kind: BuildConfig
    apiVersion: build.openshift.io/v1
    metadata:
      name: ${NAME}-celery${SUFFIX}
      creationTimestamp:
    spec:
      triggers: []
      runPolicy: Serial
      source:
        git:
          uri: ${GIT_URL}
          ref: ${GIT_REF}
        type: Git        
      strategy:
        type: Docker
        dockerStrategy:
          dockerfilePath: openshift-v4/templates/celery/Dockerfile
          noCache: true
          env:
            - name: ARTIFACTORY_USER
              valueFrom:
                secretKeyRef:
                  name: artifacts-default-cgcynz
                  key: username
            - name: ARTIFACTORY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: artifacts-default-cgcynz
                  key: password
          forcePull: true
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}-celery:${VERSION}
      resources: 
        limits:
          cpu: 1500m
          memory: 1300Mi
        requests:
          cpu: 750m
          memory: 650Mi
      postCommit: {}
      nodeSelector:
      successfulBuildsHistoryLimit: 5
      failedBuildsHistoryLimit: 5
    status:
      lastVersion: 0
