---
apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: tfrs-network-policy
metadata:
  name: tfrs-network-policy
parameters:
  - name: ENVIRONMENT
    displayName: null
    description: such as dev, test or prod
    required: true  
objects:
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-tfrs-backend-accepts-frontend-${ENVIRONMENT}
    spec:
      ## Allow backend to accept communication from frontend
      podSelector:
        matchLabels:
          name: tfrs-backend-${ENVIRONMENT}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-frontend-${ENVIRONMENT}
          ports:
            - protocol: TCP
              port: 8080
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-tfrs-minio-accepts-${ENVIRONMENT}
    spec:
      ## Allow minio to accept communications from scan coordinator
      ## Allow minio to accept communications from celery
      ## Allow minio to accept communications from backend
      podSelector:
        matchLabels:
          name: tfrs-minio-${ENVIRONMENT}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-scan-coordinator-${ENVIRONMENT}
          ports:
            - protocol: TCP
              port: 9000    
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-celery-${ENVIRONMENT}
          ports:
            - protocol: TCP
              port: 9000      
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-backend-${ENVIRONMENT}
          ports:
            - protocol: TCP
              port: 9000                                             
