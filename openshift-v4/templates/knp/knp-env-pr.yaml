---
apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: tfrs-network-policy
metadata:
  name: tfrs-network-policy
parameters:
  - name: SUFFIX
    displayName: null
    description: sample is -dev-97
    required: true  
  - name: ENVIRONMENT
    displayName: null
    description: such as dev, test or prod
    required: true  
objects:
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-backend-accepts-frontend${SUFFIX}
    spec:
      ## Allow backend to accept communication from frontend
      podSelector:
        matchLabels:
          name: tfrs-backend${SUFFIX}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-frontend${SUFFIX}
          ports:
            - protocol: TCP
              port: 8080
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-backend${SUFFIX}
    spec:
      ## Allow patroni to accept communications from backend
      podSelector:
        matchLabels:
          cluster-name: patroni${SUFFIX}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-backend${SUFFIX}
          ports:
            - protocol: TCP
              port: 5432
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-scan-handler${SUFFIX}
    spec:
      ## Allow patroni to accept communications from scan handler
      podSelector:
        matchLabels:
          cluster-name: patroni${SUFFIX}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-scan-handler${SUFFIX}
          ports:
            - protocol: TCP
              port: 5432
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-celery${SUFFIX}
    spec:
      ## Allow patroni to accept communications from celery
      podSelector:
        matchLabels:
          cluster-name: patroni${SUFFIX}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-celery${SUFFIX}
          ports:
            - protocol: TCP
              port: 5432
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-nagios
    spec:
      ## Allow patroni to accept communications from nagios
      podSelector:
        matchLabels:
          cluster-name: patroni${SUFFIX}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app: nagios
          ports:
            - protocol: TCP
              port: 5432
            - protocol: TCP
              port: 8008              
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-backup-container
    spec:
      ## Allow patroni to accept communications from backup container
      podSelector:
        matchLabels:
          cluster-name: patroni${SUFFIX}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: patroni-backup
          ports:
            - protocol: TCP
              port: 5432
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-patroni-itself${SUFFIX}
    spec:
      ## Allow patroni to accept communications from other patroni pods
      podSelector:
        matchLabels:
          cluster-name: patroni${SUFFIX}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  cluster-name: patroni${SUFFIX}
          ports:
            - protocol: TCP
              port: 5432    
            - protocol: TCP
              port: 8008                    
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-rabbitmq-accepts-notification-server${SUFFIX}
    spec:
      ## Allow rabbitmq to accept communications from notification server
      podSelector:
        matchLabels:
          app: tfrs${SUFFIX}-rabbitmq-cluster
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-notification-server${SUFFIX}
          ports:
            - protocol: TCP
              port: 5672    
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-rabbitmq-accepts-backend${SUFFIX}
    spec:
      ## Allow rabbitmq to accept communications from backend
      podSelector:
        matchLabels:
          app: tfrs${SUFFIX}-rabbitmq-cluster
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-backend${SUFFIX}
          ports:
            - protocol: TCP
              port: 5672               
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-rabbitmq-accepts-scan-handler${SUFFIX}
    spec:
      ## Allow rabbitmq to accept communications from scan handler
      podSelector:
        matchLabels:
          app: tfrs${SUFFIX}-rabbitmq-cluster
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-scan-handler${SUFFIX}
          ports:
            - protocol: TCP
              port: 5672            
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-rabbitmq-accepts-scan-coordinator${SUFFIX}
    spec:
      ## Allow rabbitmq to accept communications from scan coordinator
      podSelector:
        matchLabels:
          app: tfrs${SUFFIX}-rabbitmq-cluster
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-scan-coordinator${SUFFIX}
          ports:
            - protocol: TCP
              port: 5672                 
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-rabbitmq-accepts-nagios
    spec:
      ## Allow rabbitmq to accept communications from nagios
      podSelector:
        matchLabels:
          app: tfrs${SUFFIX}-rabbitmq-cluster
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app: nagios
          ports:
            - protocol: TCP
              port: 5672           
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-rabbitmq-accepts-celery${SUFFIX}
    spec:
      ## Allow rabbitmq to accept communications from celery
      podSelector:
        matchLabels:
          app: tfrs${SUFFIX}-rabbitmq-cluster
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-celery${SUFFIX}
          ports:
            - protocol: TCP
              port: 5672           
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-rabbitmq-accepts-itself${SUFFIX}
    spec:
      ## Allow rabbitmq to accept communications from other rabbitmq pods
      podSelector:
        matchLabels:
          app: tfrs${SUFFIX}-rabbitmq-cluster
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app: tfrs${SUFFIX}-rabbitmq-cluster
          ports:
            - protocol: TCP
              port: 5672                    
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-clamav-accepts-backend${SUFFIX}
    spec:
      ## Allow clamav to accept communications from backend
      podSelector:
        matchLabels:
          name: tfrs-clamav-${ENVIRONMENT}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-backend${SUFFIX}
          ports:
            - protocol: TCP
              port: 3310                  
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-clamav-accepts-scan-coordinator${SUFFIX}
    spec:
      ## Allow clamav to accept communications from scan coordinator
      podSelector:
        matchLabels:
          name: tfrs-clamav-${ENVIRONMENT}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-scan-coordinator${SUFFIX}
          ports:
            - protocol: TCP
              port: 3310                      
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-minio-accepts-scan-coordinator${SUFFIX}
    spec:
      ## Allow minio to accept communications from scan coordinator
      podSelector:
        matchLabels:
          name: tfrs-minio-${ENVIRONMENT}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-scan-coordinator${SUFFIX}
          ports:
            - protocol: TCP
              port: 9000             
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-minio-accepts-celery${SUFFIX}
    spec:
      ## Allow minio to accept communications from celery
      podSelector:
        matchLabels:
          name: tfrs-minio-${ENVIRONMENT}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-celery${SUFFIX}
          ports:
            - protocol: TCP
              port: 9000        
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-minio-accepts-backed
    spec:
      ## Allow minio to accept communications from celery
      podSelector:
        matchLabels:
          name: tfrs-minio-${ENVIRONMENT}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-backend${SUFFIX}
          ports:
            - protocol: TCP
              port: 9000                                                                                   
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-schemaspy-public${SUFFIX}
    spec:
      ## Allow patroni to accept communications from schemaspy-public
      podSelector:
        matchLabels:
          cluster-name: patroni${SUFFIX}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-schema-spy-public${SUFFIX}
          ports:
            - protocol: TCP
              port: 5432
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-schemaspy-audit${SUFFIX}
    spec:
      ## Allow patroni to accept communications from schemaspy-audit
      podSelector:
        matchLabels:
          cluster-name: patroni${SUFFIX}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  name: tfrs-schema-spy-audit${SUFFIX}
          ports:
            - protocol: TCP
              port: 5432              
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: allow-patroni-accepts-backendmid${SUFFIX}
    spec:
      ## Allow patroni to accept communications from backend mid lifecycle pod
      podSelector:
        matchLabels:
          cluster-name: patroni${SUFFIX}
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  openshift.io/deployer-pod.type: hook-mid
          ports:
            - protocol: TCP
              port: 5432