apiVersion: v1
kind: Template
metadata:
  name: rabbitmq-cluster
  annotations:
    description: "Deploys a RabbitMQ cluster"
    iconClass: icon-rabbitmq
    tags: rabbitmq,mq,messaging
parameters:
- name: NAME
  displayName:
  description: the module name entered when run yo bcdk:pipeline, which is zeva
  required: true
- name: ENV_NAME
  displayName:
  description: sample is dev, test and prod
  required: true  
- name: SUFFIX
  displayName:
  description: sample is -dev-161
  required: true
- name: NAMESPACE
  description: "OpenShift project (current namespace)"
  value: e52f12-dev
  required: true
- name: CLUSTER_NAME
  description: "Name of the RabbitMQ cluster"
  value: rabbitmq-cluster
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      as-copy-of: template.rabbitmq-secret
    name: ${NAME}${SUFFIX}-${CLUSTER_NAME}-secret
  stringData:
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASS}
    cookie: ${ERLANG_COOKIE}
  type: kubernetes.io/basic-auth

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${NAME}${SUFFIX}-${CLUSTER_NAME}-config
    app: rabbitmq-cluster
  data:
    rabbitmq.conf: |
        ## Clustering
        cluster_formation.peer_discovery_backend = rabbit_peer_discovery_k8s
        cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
        cluster_formation.k8s.address_type = hostname
        cluster_formation.k8s.hostname_suffix = .${NAME}${SUFFIX}-${CLUSTER_NAME}.${NAMESPACE}.svc.cluster.local
        cluster_formation.node_cleanup.interval = 10
        cluster_formation.node_cleanup.only_log_warning = true
        cluster_partition_handling = autoheal
        ## queue master locator
        queue_master_locator=min-masters
        ## policy.json is from image customized
        ## management.load_definitions = /etc/rabbitmq/policy.json
    enabled_plugins: |
      [rabbitmq_management,rabbitmq_peer_discovery_k8s].
