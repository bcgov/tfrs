version: '3'

services:
    db:
        build:
            dockerfile: Dockerfile-postgres
            context: ./postgres
        expose:
            - 5432
        ports:
            - 5432:5432
    rabbit:
        image: rabbitmq:3.7-management
        hostname: "rabbit"
        environment:
            - RABBITMQ_DEFAULT_USER=rabbitmq
            - RABBITMQ_DEFAULT_PASS=rabbitmq
            - RABBITMQ_DEFAULT_VHOST=/tfrs
            - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error}]
        ports:
            - 15672:15672
            - 5672:5672
    django:
        environment:
          - DATABASE_NAME=tfrs
          - DATABASE_USER=tfrs
          - DATABASE_PASSWORD=development_only
          - DATABASE_ENGINE=postgresql
          - DATABASE_SERVICE_NAME=postgresql
          - POSTGRESQL_SERVICE_HOST=db
          - POSTGRESQL_SERVICE_PORT=5432
          - RABBITMQ_VHOST=/tfrs
          - RABBITMQ_USER=rabbitmq
          - RABBITMQ_PASSWORD=rabbitmq
          - RABBITMQ_HOST=rabbit
          - RABBITMQ_PORT=5672
          - DOCUMENTS_API_ENABLED=True
          - SMTP_SERVER_HOST=smtplogger
          - SMTP_SERVER_PORT=2500
          - EMAIL_SENDING_ENABLED=False
          - EMAIL_FROM_ADDRESS=tfrs-test@test.local
          - FUEL_CODES_API_ENABLED=True
          - CREDIT_CALCULATION_API_ENABLED=True
          - COMPLIANCE_REPORTING_API_ENABLED=True
        depends_on:
            - db
        build:
            dockerfile: Dockerfile-django
            context: ./backend
        command: >
                bash -c
                "pip install -q -r requirements.txt &&
                /wfi/wait-for-it.sh -t 14400 rabbit:5672 &&
                /wfi/wait-for-it.sh -t 14400 db:5432 &&
                python3 manage.py test -v 2 --testrunner django.test.runner.DiscoverRunner"
        volumes:
            - ./backend:/app

volumes:
    minio_data:
