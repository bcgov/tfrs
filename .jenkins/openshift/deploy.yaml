apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: jenkins
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      shared: "true"
    name: ${NAME}
  spec:
    lookupPolicy:
      local: false
# - apiVersion: v1
#   kind: Secret
#   metadata:
#     annotations:
#       as-copy-of: template.${NAME}-slave-user
#       as-copy-of/preserve: password
#     name: ${NAME}${SUFFIX}-slave-user
#   stringData:
#     metadata.name: ""
#     username: ""
#     password: ""
#   type: kubernetes.io/basic-auth
# - apiVersion: v1
#   kind: Secret
#   metadata:
#     annotations:
#       as-copy-of: template.${NAME}-github
#     name: ${NAME}${SUFFIX}-github
#   stringData:
#     metadata.name: ""
#     username: ""
#     password: ""
#   type: kubernetes.io/basic-auth
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      volume.beta.kubernetes.io/storage-class: gluster-file
      volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/glusterfs
    name: ${NAME}${SUFFIX}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${NAME}${SUFFIX}"}}'
    name: ${NAME}${SUFFIX}
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: ${NAME}${SUFFIX}_edit
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: ${NAME}${SUFFIX}
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: ${NAME}${SUFFIX}_admin
  roleRef:
    name: admin
  subjects:
  - kind: ServiceAccount
    name: ${NAME}${SUFFIX}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: null
    name: ${NAME}${SUFFIX}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: ${NAME}${SUFFIX}
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: ${NAME}${SUFFIX}
      spec:
        containers:
        - command:
          - /usr/local/bin/container-entrypoint
          - /usr/local/bin/jenkins-run
          env:
          - name: USE_JAVA_DIAGNOSTICS
            value: "true"
          - name: JENKINS_URL
            value: https://${ROUTE_HOST}${ROUTE_PATH}
          - name: ENV_NAME
            value: ${ENV_NAME}
          - name: ENV_ID
            value: ${ENV_ID}
          image: ' '
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 420
            periodSeconds: 360
            timeoutSeconds: 240
          name: jenkins
          ports:
          - containerPort: 50000
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 240
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 300m
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/jenkins/jobs
            name: jenkins-jobs
            readOnly: false
          - mountPath: /var/run/pod
            name: pod-metadata
          - mountPath: /run/secrets/jenkins-slave-user
            name: jenkins-slave-user
            readOnly: true
          - mountPath: /run/secrets/github
            name: github
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ${NAME}${SUFFIX}
        serviceAccountName: ${NAME}${SUFFIX}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: jenkins-jobs
          persistentVolumeClaim:
            claimName: ${NAME}${SUFFIX}
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.name
              name: name
              path: name
            - fieldRef:
                fieldPath: metadata.namespace
              name: namespace
              path: namespace
            - fieldRef:
                fieldPath: metadata.labels
              name: labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              name: annotations
              path: annotations
          name: pod-metadata
        - name: jenkins-slave-user
          secret:
            defaultMode: 420
            secretName: ${NAME}${SUFFIX}-slave-user
        - name: github
          secret:
            defaultMode: 420
            secretName: ${NAME}${SUFFIX}-github
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: ${NAME}:${VERSION}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: ${NAME}${SUFFIX}-slave-build
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: ${NAME}${SUFFIX}-slave-build
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: ${NAME}${SUFFIX}-slave-build
      spec:
        containers:
        - command:
          - bash
          - -c
          - cd $HOME && java -XshowSettings:vm -version && exec java -jar /usr/lib/jenkins/swarm-client.jar
            -name "$(cat /etc/hostname)" -deleteExistingClients -fsroot "$JENKINS_HOME/$(cat
            /etc/hostname)" -master http://$JENKINS_MASTER_SERVICE:8080 -disableSslVerification
            -username  "$(cat /var/run/secrets/jenkins-slave-user/username)" -passwordFile
            /var/run/secrets/jenkins-slave-user/password -description "$(cat /etc/hostname)"
            -executors 3 -labels 'Linux rhel rhel7 build test deploy light' -mode
            'normal' -retry 10 -tunnel $JENKINS_MASTER_SERVICE:50000 -disableClientsUniqueId
          env:
          - name: JENKINS_MASTER_SERVICE
            value: ${NAME}${SUFFIX}
          - name: JAVA_TOOL_OPTIONS
            value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
              -XX:MaxRAMFraction=5 -XX:MaxHeapFreeRatio=20 -XX:MinHeapFreeRatio=10
              -XX:+UseParallelGC -XX:ParallelGCThreads=2
          - name: ENV_NAME
            value: ${ENV_NAME}
          - name: ENV_ID
            value: ${ENV_ID}
          image: ' '
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - curl
              - -sSf
              - http://${NAME}${SUFFIX}:8080/login
            failureThreshold: 3
            initialDelaySeconds: 420
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 360
          name: jenkins
          ports:
          - containerPort: 50000
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - curl
              - -sSf
              - http://${NAME}${SUFFIX}:8080/login
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 240
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 300m
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/pod
            name: pod-metadata
          - mountPath: /run/secrets/jenkins-slave-user
            name: jenkins-slave-user
            readOnly: true
          - mountPath: /run/secrets/github
            name: github
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ${NAME}${SUFFIX}
        serviceAccountName: ${NAME}${SUFFIX}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: ${NAME}${SUFFIX}
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.name
              name: name
              path: name
            - fieldRef:
                fieldPath: metadata.namespace
              name: namespace
              path: namespace
            - fieldRef:
                fieldPath: metadata.labels
              name: labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              name: annotations
              path: annotations
          name: pod-metadata
        - name: jenkins-slave-user
          secret:
            defaultMode: 420
            secretName: ${NAME}${SUFFIX}-slave-user
        - name: github
          secret:
            defaultMode: 420
            secretName: ${NAME}${SUFFIX}-github
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: ${NAME}:${VERSION}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${NAME}${SUFFIX}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 50000-tcp
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      deploymentconfig: ${NAME}${SUFFIX}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: ${NAME}${SUFFIX}
  spec:
    host: ${ROUTE_HOST}
    path: ${ROUTE_PATH}
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: ${NAME}${SUFFIX}
      weight: 100
    wildcardPolicy: None
parameters:
- description: A name used for all objects
  displayName: Name
  name: NAME
  required: true
- description: A name suffix used for all objects
  displayName: Suffix
  name: SUFFIX
  required: false
  value: ""
- description: A version used for the image tags
  displayName: version
  name: VERSION
  required: true
  value: v1.0.0
- description: ROUTE_HOST
  displayName: ROUTE_HOST
  name: ROUTE_HOST
  required: true
- description: ROUTE_PATH
  displayName: ROUTE_PATH
  name: ROUTE_PATH
  required: true
  value: /
- description: Environment Name
  displayName: ENV_NAME
  name: ENV_NAME
  required: true
  value: prod
- description: Environment ID
  displayName: ENV_ID
  name: ENV_ID
  required: true
  value: prod
