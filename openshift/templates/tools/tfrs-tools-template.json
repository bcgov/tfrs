{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "name": "tfrs-tools",
        "creationTimestamp": null
    },
    "objects": [
        {
            "kind": "RoleBinding",
            "apiVersion": "v1",
            "metadata": {
                "name": "admin",
                "creationTimestamp": null
            },
            "userNames": [
                "sheaphillips",
                "rajpersram",
                "kuanfandevops",
                "cvarjao"
            ],
            "groupNames": null,
            "subjects": [
                {
                    "kind": "User",
                    "name": "sheaphillips"
                },
                {
                    "kind": "User",
                    "name": "rajpersram"
                },
                {
                    "kind": "User",
                    "name": "kuanfandevops"
                },
                {
                    "kind": "User",
                    "name": "cvarjao"
                }
            ],
            "roleRef": {
                "name": "admin"
            }
        },
        {
            "kind": "RoleBinding",
            "apiVersion": "v1",
            "metadata": {
                "name": "jenkins_edit",
                "creationTimestamp": null,
                "labels": {
                    "app": "jenkins-pipeline",
                    "template": "jenkins-persistent-template"
                }
            },
            "userNames": [
                "system:serviceaccount:mem-tfrs-tools:jenkins",
                "matthewhall78",
                "dainetrinidad",
                "rstens"
            ],
            "groupNames": null,
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "namespace": "mem-tfrs-tools",
                    "name": "jenkins"
                },
                {
                    "kind": "User",
                    "name": "matthewhall78"
                },
                {
                    "kind": "User",
                    "name": "dainetrinidad"
                },
                {
                    "kind": "User",
                    "name": "rstens"
                }
            ],
            "roleRef": {
                "name": "edit"
            }
        },
        {
            "kind": "RoleBinding",
            "apiVersion": "v1",
            "metadata": {
                "name": "system:deployers",
                "creationTimestamp": null
            },
            "userNames": [
                "system:serviceaccount:mem-tfrs-tools:deployer"
            ],
            "groupNames": null,
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "namespace": "mem-tfrs-tools",
                    "name": "deployer"
                }
            ],
            "roleRef": {
                "name": "system:deployer"
            }
        },
        {
            "kind": "RoleBinding",
            "apiVersion": "v1",
            "metadata": {
                "name": "system:image-builders",
                "creationTimestamp": null
            },
            "userNames": [
                "system:serviceaccount:mem-tfrs-tools:builder"
            ],
            "groupNames": null,
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "namespace": "mem-tfrs-tools",
                    "name": "builder"
                }
            ],
            "roleRef": {
                "name": "system:image-builder"
            }
        },
        {
            "kind": "RoleBinding",
            "apiVersion": "v1",
            "metadata": {
                "name": "system:image-pullers",
                "creationTimestamp": null
            },
            "userNames": [
                "system:serviceaccount:mem-tfrs-dev:default",
                "system:serviceaccount:mem-tfrs-test:default",
                "system:serviceaccount:mem-tfrs-prod:default",
                "system:serviceaccount:default:jenkins",
                "system:serviceaccount:default:jenkins-pipeline-svc",
                "system:serviceaccount:mem-tfrs-dev:deployer"
            ],
            "groupNames": [
                "system:serviceaccounts:mem-tfrs-tools"
            ],
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "namespace": "mem-tfrs-dev",
                    "name": "default"
                },
                {
                    "kind": "ServiceAccount",
                    "namespace": "mem-tfrs-test",
                    "name": "default"
                },
                {
                    "kind": "ServiceAccount",
                    "namespace": "mem-tfrs-prod",
                    "name": "default"
                },
                {
                    "kind": "ServiceAccount",
                    "namespace": "default",
                    "name": "jenkins"
                },
                {
                    "kind": "ServiceAccount",
                    "namespace": "default",
                    "name": "jenkins-pipeline-svc"
                },
                {
                    "kind": "ServiceAccount",
                    "namespace": "mem-tfrs-dev",
                    "name": "deployer"
                },
                {
                    "kind": "SystemGroup",
                    "name": "system:serviceaccounts:mem-tfrs-tools"
                }
            ],
            "roleRef": {
                "name": "system:image-puller"
            }
        },
        {
            "kind": "RoleBinding",
            "apiVersion": "v1",
            "metadata": {
                "name": "view",
                "creationTimestamp": null
            },
            "userNames": [
                "swcurran",
                "system:serviceaccount:default:jenkins"
            ],
            "groupNames": null,
            "subjects": [
                {
                    "kind": "User",
                    "name": "swcurran"
                },
                {
                    "kind": "ServiceAccount",
                    "namespace": "default",
                    "name": "jenkins"
                }
            ],
            "roleRef": {
                "name": "view"
            }
        },
        {
            "kind": "PersistentVolumeClaim",
            "apiVersion": "v1",
            "metadata": {
                "name": "jenkins-cns",
                "creationTimestamp": null,
                "annotations": {
                    "control-plane.alpha.kubernetes.io/leader": "{\"holderIdentity\":\"d49aaa14-e506-11e7-bfd0-0a58ac332043\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2018-01-09T21:25:22Z\",\"renewTime\":\"2018-01-09T21:25:26Z\",\"leaderTransitions\":0}",
                    "pv.kubernetes.io/bind-completed": "yes",
                    "pv.kubernetes.io/bound-by-controller": "yes",
                    "volume.beta.kubernetes.io/storage-class": "gluster-block",
                    "volume.beta.kubernetes.io/storage-provisioner": "gluster.org/glusterblock"
                }
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "5Gi"
                    }
                },
                "volumeName": "pvc-99698347-f583-11e7-9ace-0050568348cc"
            },
            "status": {}
        },
        {
            "kind": "PersistentVolumeClaim",
            "apiVersion": "v1",
            "metadata": {
                "name": "jenkins-cns2",
                "creationTimestamp": null,
                "annotations": {
                    "pv.kubernetes.io/bind-completed": "yes",
                    "pv.kubernetes.io/bound-by-controller": "yes",
                    "volume.beta.kubernetes.io/storage-class": "gluster-file",
                    "volume.beta.kubernetes.io/storage-provisioner": "kubernetes.io/glusterfs"
                }
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "10Gi"
                    }
                },
                "volumeName": "pvc-d753561f-fd60-11e7-b70e-005056832285"
            },
            "status": {}
        },
        {
            "kind": "PersistentVolumeClaim",
            "apiVersion": "v1",
            "metadata": {
                "name": "postgresql-sonarqube-cns",
                "creationTimestamp": null,
                "annotations": {
                    "pv.kubernetes.io/bind-completed": "yes",
                    "pv.kubernetes.io/bound-by-controller": "yes",
                    "volume.beta.kubernetes.io/storage-class": "gluster-file",
                    "volume.beta.kubernetes.io/storage-provisioner": "kubernetes.io/glusterfs"
                }
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "5Gi"
                    }
                },
                "volumeName": "pvc-814c86b8-f634-11e7-9f70-005056832285"
            },
            "status": {}
        },
        {
            "kind": "PersistentVolumeClaim",
            "apiVersion": "v1",
            "metadata": {
                "name": "sonarqube-data-cns",
                "creationTimestamp": null,
                "annotations": {
                    "pv.kubernetes.io/bind-completed": "yes",
                    "pv.kubernetes.io/bound-by-controller": "yes",
                    "volume.beta.kubernetes.io/storage-class": "gluster-file",
                    "volume.beta.kubernetes.io/storage-provisioner": "kubernetes.io/glusterfs"
                }
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "1Gi"
                    }
                },
                "volumeName": "pvc-6eefa34f-f634-11e7-9f70-005056832285"
            },
            "status": {}
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "client",
                "creationTimestamp": null,
                "annotations": {
                    "description": "Defines how to build the client / front end image"
                }
            },
            "spec": {
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "runPolicy": "Serial",
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "https://github.com/bcgov/tfrs.git",
                        "ref": "master"
                    },
                    "contextDir": "frontend"
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "openshift",
                            "name": "nodejs:latest"
                        },
                        "runtimeImage": {
                            "kind": "ImageStreamTag",
                            "namespace": "openshift",
                            "name": "nginx-runtime:latest"
                        },
                        "runtimeArtifacts": [
                            {
                                "sourcePath": "/opt/app-root/src/public/index.html",
                                "destinationDir": "tmp/app/dist"
                            },
                            {
                                "sourcePath": "/opt/app-root/src/public/assets",
                                "destinationDir": "tmp/app/dist"
                            },
                            {
                                "sourcePath": "/opt/app-root/src/public/build",
                                "destinationDir": "tmp/app/dist"
                            }
                        ]
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "client:latest"
                    }
                },
                "resources": {
                    "limits": {
                        "cpu": "2",
                        "memory": "4Gi"
                    }
                },
                "postCommit": {},
                "nodeSelector": null
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "client-develop",
                "creationTimestamp": null,
                "annotations": {
                    "description": "Defines how to build the client / front end image"
                }
            },
            "spec": {
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "runPolicy": "Serial",
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "https://github.com/bcgov/tfrs.git",
                        "ref": "develop"
                    },
                    "contextDir": "frontend"
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "openshift",
                            "name": "nodejs:latest"
                        },
                        "runtimeImage": {
                            "kind": "ImageStreamTag",
                            "namespace": "mem-tfrs-tools",
                            "name": "nginx-runtime:latest"
                        },
                        "runtimeArtifacts": [
                            {
                                "sourcePath": "/opt/app-root/src/public/index.html",
                                "destinationDir": "tmp/app/dist"
                            },
                            {
                                "sourcePath": "/opt/app-root/src/public/assets",
                                "destinationDir": "tmp/app/dist"
                            },
                            {
                                "sourcePath": "/opt/app-root/src/public/build",
                                "destinationDir": "tmp/app/dist"
                            }
                        ]
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "client:latest"
                    }
                },
                "resources": {
                    "limits": {
                        "cpu": "2",
                        "memory": "4Gi"
                    }
                },
                "postCommit": {},
                "nodeSelector": null
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "develop-client-pipeline",
                "creationTimestamp": null,
                "labels": {
                    "app": "develop-client-pipeline",
                    "name": "develop-client-pipeline",
                    "template": "develop-client-pipeline"
                }
            },
            "spec": {
                "triggers": [],
                "runPolicy": "Parallel",
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "https://github.com/bcgov/tfrs.git",
                        "ref": "develop"
                    }
                },
                "strategy": {
                    "type": "JenkinsPipeline",
                    "jenkinsPipelineStrategy": {
                        "jenkinsfilePath": "frontend/Jenkinsfile-develop"
                    }
                },
                "output": {},
                "resources": {},
                "postCommit": {},
                "nodeSelector": {}
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "develop-tfrs-pipeline",
                "creationTimestamp": null,
                "labels": {
                    "app": "develop-tfrs-pipeline",
                    "name": "develop-tfrs-pipeline",
                    "template": "develop-tfrs-pipeline"
                }
            },
            "spec": {
                "triggers": [],
                "runPolicy": "Parallel",
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "https://github.com/bcgov/tfrs.git",
                        "ref": "develop"
                    }
                },
                "strategy": {
                    "type": "JenkinsPipeline",
                    "jenkinsPipelineStrategy": {
                        "jenkinsfilePath": "backend/Jenkinsfile-develop"
                    }
                },
                "output": {},
                "resources": {},
                "postCommit": {},
                "nodeSelector": {}
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "devops-testdisablemigration",
                "creationTimestamp": null,
                "annotations": {
                    "description": "Defines how to build the application"
                }
            },
            "spec": {
                "triggers": [],
                "runPolicy": "Serial",
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "https://github.com/bcgov/tfrs.git",
                        "ref": "devops-testdisablemigration"
                    },
                    "contextDir": "backend"
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "openshift",
                            "name": "python:3.6"
                        },
                        "env": [
                            {
                                "name": "PIP_INDEX_URL"
                            }
                        ]
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "tfrs:latest"
                    }
                },
                "resources": {},
                "postCommit": {},
                "nodeSelector": null
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "master-client-pipeline",
                "creationTimestamp": null,
                "labels": {
                    "app": "master-client-pipeline",
                    "name": "master-client-pipeline",
                    "template": "master-client-pipeline"
                }
            },
            "spec": {
                "triggers": [],
                "runPolicy": "Parallel",
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "https://github.com/bcgov/tfrs.git",
                        "ref": "master"
                    }
                },
                "strategy": {
                    "type": "JenkinsPipeline",
                    "jenkinsPipelineStrategy": {
                        "jenkinsfilePath": "frontend/Jenkinsfile-develop"
                    }
                },
                "output": {},
                "resources": {},
                "postCommit": {},
                "nodeSelector": {}
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "master-tfrs-pipeline",
                "creationTimestamp": null,
                "labels": {
                    "app": "master-tfrs-pipeline",
                    "name": "master-tfrs-pipeline",
                    "template": "master-tfrs-pipeline"
                }
            },
            "spec": {
                "triggers": [],
                "runPolicy": "Parallel",
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "https://github.com/bcgov/tfrs.git",
                        "ref": "master"
                    }
                },
                "strategy": {
                    "type": "JenkinsPipeline",
                    "jenkinsPipelineStrategy": {
                        "jenkinsfilePath": "backend/Jenkinsfile-develop"
                    }
                },
                "output": {},
                "resources": {},
                "postCommit": {},
                "nodeSelector": {}
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "nginx-runtime",
                "creationTimestamp": null,
                "labels": {
                    "app": "nginx-runtime"
                }
            },
            "spec": {
                "triggers": [],
                "runPolicy": "Serial",
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "https://github.com/bcgov/tfrs",
                        "ref": "devops-nginx"
                    },
                    "contextDir": "openshift/templates/nginx-runtime"
                },
                "strategy": {
                    "type": "Docker",
                    "dockerStrategy": {}
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "nginx-runtime:latest"
                    }
                },
                "resources": {},
                "postCommit": {},
                "nodeSelector": null
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "schema-spy",
                "creationTimestamp": null,
                "labels": {
                    "app": "schema-spy",
                    "buildconfig": "schema-spy"
                }
            },
            "spec": {
                "triggers": [
                    {
                        "type": "ConfigChange"
                    }
                ],
                "runPolicy": "Serial",
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "https://github.com/bcgov/SchemaSpy.git"
                    }
                },
                "strategy": {
                    "type": "Docker",
                    "dockerStrategy": {}
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "schema-spy:latest"
                    }
                },
                "resources": {},
                "postCommit": {},
                "nodeSelector": null
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "tfrs",
                "creationTimestamp": null,
                "annotations": {
                    "description": "Defines how to build the application"
                }
            },
            "spec": {
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "runPolicy": "Serial",
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "https://github.com/bcgov/tfrs.git",
                        "ref": "master"
                    },
                    "contextDir": "backend"
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "openshift",
                            "name": "python:3.6"
                        },
                        "env": [
                            {
                                "name": "PIP_INDEX_URL"
                            }
                        ]
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "tfrs:latest"
                    }
                },
                "resources": {},
                "postCommit": {},
                "nodeSelector": null
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "tfrs-develop",
                "creationTimestamp": null,
                "annotations": {
                    "description": "Defines how to build the application"
                }
            },
            "spec": {
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "runPolicy": "Serial",
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "https://github.com/bcgov/tfrs.git",
                        "ref": "develop"
                    },
                    "contextDir": "backend"
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "openshift",
                            "name": "python:3.6"
                        },
                        "env": [
                            {
                                "name": "PIP_INDEX_URL"
                            }
                        ]
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "tfrs:latest"
                    }
                },
                "resources": {},
                "postCommit": {},
                "nodeSelector": null
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "working-client-pipeline",
                "creationTimestamp": null,
                "labels": {
                    "app": "working-client-pipeline",
                    "name": "working-client-pipeline",
                    "template": "working-client-pipeline"
                }
            },
            "spec": {
                "triggers": [],
                "runPolicy": "Parallel",
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "https://github.com/bcgov/tfrs.git",
                        "ref": "devops-coverage"
                    }
                },
                "strategy": {
                    "type": "JenkinsPipeline",
                    "jenkinsPipelineStrategy": {
                        "jenkinsfilePath": "backend/Jenkinsfile-develop"
                    }
                },
                "output": {},
                "resources": {},
                "postCommit": {},
                "nodeSelector": {}
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "working-tfrs-pipeline",
                "creationTimestamp": null,
                "labels": {
                    "app": "working-tfrs-pipeline",
                    "name": "working-tfrs-pipeline",
                    "template": "working-tfrs-pipeline"
                }
            },
            "spec": {
                "triggers": [],
                "runPolicy": "Serial",
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "https://github.com/bcgov/tfrs.git",
                        "ref": "devops-testdisablemigration"
                    }
                },
                "strategy": {
                    "type": "JenkinsPipeline",
                    "jenkinsPipelineStrategy": {
                        "jenkinsfilePath": "backend/Jenkinsfile-develop"
                    }
                },
                "output": {},
                "resources": {},
                "postCommit": {},
                "nodeSelector": {}
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "jenkins",
                "generation": 1,
                "creationTimestamp": null,
                "labels": {
                    "app": "jenkins-pipeline",
                    "template": "jenkins-persistent-template"
                },
                "annotations": {
                    "template.alpha.openshift.io/wait-for-ready": "true"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate",
                    "recreateParams": {
                        "timeoutSeconds": 600
                    },
                    "resources": {},
                    "activeDeadlineSeconds": 21600
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "jenkins"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "openshift",
                                "name": "jenkins:latest"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "test": false,
                "selector": {
                    "name": "jenkins"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "name": "jenkins"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "jenkins-data",
                                "persistentVolumeClaim": {
                                    "claimName": "jenkins-cns2"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "jenkins",
                                "image": "registry.access.redhat.com/openshift3/jenkins-2-rhel7@sha256:c2e5ffc909fc598628caebe56571849cbcbeea6c99f885a9870cb8c5967d5111",
                                "env": [
                                    {
                                        "name": "OPENSHIFT_ENABLE_OAUTH",
                                        "value": "true"
                                    },
                                    {
                                        "name": "OPENSHIFT_ENABLE_REDIRECT_PROMPT",
                                        "value": "true"
                                    },
                                    {
                                        "name": "OPENSHIFT_JENKINS_JVM_ARCH",
                                        "value": "x86_64"
                                    },
                                    {
                                        "name": "KUBERNETES_MASTER",
                                        "value": "https://kubernetes.default:443"
                                    },
                                    {
                                        "name": "KUBERNETES_TRUST_CERTIFICATES",
                                        "value": "true"
                                    },
                                    {
                                        "name": "JNLP_SERVICE_NAME",
                                        "value": "jenkins-jnlp"
                                    },
                                    {
                                        "name": "JAVA_OPTS",
                                        "value": "-XX:MaxMetaspaceSize=512m"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "6Gi"
                                    },
                                    "requests": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "jenkins-data",
                                        "mountPath": "/var/lib/jenkins"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {},
                                    "privileged": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "jenkins",
                        "serviceAccount": "jenkins",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "latestVersion": 0,
                "observedGeneration": 0,
                "replicas": 0,
                "updatedReplicas": 0,
                "availableReplicas": 0,
                "unavailableReplicas": 0
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "postgresql-sonarqube",
                "generation": 1,
                "creationTimestamp": null,
                "labels": {
                    "app": "postgresql-sonarqube"
                },
                "annotations": {
                    "description": "Defines how to deploy the database",
                    "openshift.io/container.postgresql.image.entrypoint": "[\"container-entrypoint\",\"run-postgresql\"]"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate",
                    "recreateParams": {
                        "timeoutSeconds": 600
                    },
                    "resources": {},
                    "activeDeadlineSeconds": 21600
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "postgres"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "openshift",
                                "name": "postgresql:9.4"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "test": false,
                "selector": {
                    "app": "postgresql-sonarqube",
                    "deploymentconfig": "postgresql-sonarqube"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "postgresql-sonarqube",
                            "deploymentconfig": "postgresql-sonarqube"
                        },
                        "annotations": {
                            "openshift.io/container.postgresql.image.entrypoint": "[\"container-entrypoint\",\"run-postgresql\"]"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "postgresql-sonarqube-data",
                                "persistentVolumeClaim": {
                                    "claimName": "postgresql-sonarqube-cns"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "postgres",
                                "image": "registry.access.redhat.com/rhscl/postgresql-94-rhel7@sha256:999f3041aed3bbdbca5c55bfc5849ca15e5546f457e82582863ae271b6485478",
                                "ports": [
                                    {
                                        "containerPort": 5432,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "POSTGRESQL_DATABASE",
                                        "value": "sonarqube"
                                    },
                                    {
                                        "name": "POSTGRESQL_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "name": "sonarqube-secrets",
                                                "key": "database-password"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POSTGRESQL_ADMIN_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "name": "sonarqube-secrets",
                                                "key": "database-admin-password"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POSTGRESQL_USER",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "name": "sonarqube-secrets",
                                                "key": "database-user"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "postgresql-sonarqube-data",
                                        "mountPath": "/var/lib/pgsql/data"
                                    }
                                ],
                                "livenessProbe": {
                                    "tcpSocket": {
                                        "port": 5432
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/sh",
                                            "-i",
                                            "-c",
                                            "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"
                                        ]
                                    },
                                    "initialDelaySeconds": 15,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "latestVersion": 0,
                "observedGeneration": 0,
                "replicas": 0,
                "updatedReplicas": 0,
                "availableReplicas": 0,
                "unavailableReplicas": 0
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "sonarqube",
                "generation": 1,
                "creationTimestamp": null,
                "labels": {
                    "app": "sonarqube"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate",
                    "recreateParams": {
                        "timeoutSeconds": 600
                    },
                    "resources": {},
                    "activeDeadlineSeconds": 21600
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "sonarqube"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "openshift",
                                "name": "sonarqube:6.0"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "test": false,
                "selector": {
                    "app": "sonarqube",
                    "deploymentconfig": "sonarqube"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "sonarqube",
                            "deploymentconfig": "sonarqube"
                        },
                        "annotations": {
                            "openshift.io/container.sonarqube.image.entrypoint": "[\"./bin/run.sh\"]"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "sonarqube-extensions",
                                "persistentVolumeClaim": {
                                    "claimName": "sonarqube-data-cns"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "sonarqube",
                                "image": "openshiftdemos/sonarqube@sha256:90bc4c270d3a9f9923ef0b38f7904cfb9c00e4307d4d853e9341a334e8f29cf0",
                                "ports": [
                                    {
                                        "containerPort": 9000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "SONARQUBE_JDBC_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "name": "sonarqube-secrets",
                                                "key": "database-user"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SONARQUBE_JDBC_URL",
                                        "value": "jdbc:postgresql://postgresql-sonarqube/sonarqube"
                                    },
                                    {
                                        "name": "SONARQUBE_JDBC_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "name": "sonarqube-secrets",
                                                "key": "database-password"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SONARQUBE_ADMINPW",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "name": "sonarqube-secrets",
                                                "key": "sonar-admin-password"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "4Gi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "sonarqube-extensions",
                                        "mountPath": "/opt/sonarqube/extensions"
                                    }
                                ],
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9000,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "latestVersion": 0,
                "observedGeneration": 0,
                "replicas": 0,
                "updatedReplicas": 0,
                "availableReplicas": 0,
                "unavailableReplicas": 0
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "cns-upgrade",
                "creationTimestamp": null,
                "labels": {
                    "app": "cns-upgrade"
                },
                "annotations": {
                    "openshift.io/generated-by": "OpenShiftWebConsole"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "8080-tcp",
                        "protocol": "TCP",
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentconfig": "cns-upgrade"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "glusterfs-cluster-app",
                "creationTimestamp": null
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 1,
                        "targetPort": 1
                    }
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "glusterfs-dynamic-jenkins-cns2",
                "creationTimestamp": null,
                "labels": {
                    "gluster.kubernetes.io/provisioned-for-pvc": "jenkins-cns2"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 1,
                        "targetPort": 1
                    }
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "glusterfs-dynamic-postgresql-sonarqube-cns",
                "creationTimestamp": null,
                "labels": {
                    "gluster.kubernetes.io/provisioned-for-pvc": "postgresql-sonarqube-cns"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 1,
                        "targetPort": 1
                    }
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "glusterfs-dynamic-sonarqube-data-cns",
                "creationTimestamp": null,
                "labels": {
                    "gluster.kubernetes.io/provisioned-for-pvc": "sonarqube-data-cns"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 1,
                        "targetPort": 1
                    }
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "jenkins",
                "creationTimestamp": null,
                "labels": {
                    "app": "jenkins-pipeline",
                    "template": "jenkins-persistent-template"
                },
                "annotations": {
                    "service.alpha.openshift.io/dependencies": "[{\"name\": \"jenkins-jnlp\", \"namespace\": \"\", \"kind\": \"Service\"}]",
                    "service.openshift.io/infrastructure": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "web",
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "name": "jenkins"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "jenkins-jnlp",
                "creationTimestamp": null,
                "labels": {
                    "app": "jenkins-pipeline",
                    "template": "jenkins-persistent-template"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "agent",
                        "protocol": "TCP",
                        "port": 50000,
                        "targetPort": 50000
                    }
                ],
                "selector": {
                    "name": "jenkins"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "postgresql-sonarqube",
                "creationTimestamp": null,
                "annotations": {
                    "description": "Exposes the database server"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "postgres",
                        "protocol": "TCP",
                        "port": 5432,
                        "targetPort": 5432
                    }
                ],
                "selector": {
                    "app": "postgresql-sonarqube"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "sonarqube",
                "creationTimestamp": null,
                "labels": {
                    "app": "sonarqube"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "9000-tcp",
                        "protocol": "TCP",
                        "port": 9000,
                        "targetPort": 9000
                    }
                ],
                "selector": {
                    "app": "sonarqube",
                    "deploymentconfig": "sonarqube"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "tfrs-cnsupgrade",
                "creationTimestamp": null,
                "labels": {
                    "app": "tfrs-cnsupgrade"
                },
                "annotations": {
                    "openshift.io/generated-by": "OpenShiftWebConsole"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "8080-tcp",
                        "protocol": "TCP",
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentconfig": "tfrs-cnsupgrade"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "metadata": {
                "name": "jenkins",
                "creationTimestamp": null,
                "labels": {
                    "app": "jenkins-pipeline",
                    "template": "jenkins-persistent-template"
                },
                "annotations": {
                    "haproxy.router.openshift.io/timeout": "180s",
                    "openshift.io/host.generated": "true",
                    "template.openshift.io/expose-uri": "http://{.spec.host}{.spec.path}"
                }
            },
            "spec": {
                "host": "jenkins-mem-tfrs-tools.pathfinder.gov.bc.ca",
                "to": {
                    "kind": "Service",
                    "name": "jenkins",
                    "weight": 100
                },
                "tls": {
                    "termination": "edge",
                    "insecureEdgeTerminationPolicy": "Redirect"
                },
                "wildcardPolicy": "None"
            },
            "status": {
                "ingress": [
                    {
                        "host": "jenkins-mem-tfrs-tools.pathfinder.gov.bc.ca",
                        "routerName": "router",
                        "conditions": [
                            {
                                "type": "Admitted",
                                "status": "True",
                                "lastTransitionTime": "2017-10-27T22:29:05Z"
                            }
                        ],
                        "wildcardPolicy": "None"
                    }
                ]
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "metadata": {
                "name": "sonarqube",
                "creationTimestamp": null,
                "labels": {
                    "app": "sonarqube"
                },
                "annotations": {
                    "openshift.io/host.generated": "true"
                }
            },
            "spec": {
                "host": "sonarqube-tfrs-tools.pathfinder.gov.bc.ca",
                "to": {
                    "kind": "Service",
                    "name": "sonarqube",
                    "weight": 100
                },
                "port": {
                    "targetPort": "9000-tcp"
                },
                "wildcardPolicy": "None"
            },
            "status": {
                "ingress": [
                    {
                        "host": "sonarqube-tfrs-tools.pathfinder.gov.bc.ca",
                        "routerName": "router",
                        "conditions": [
                            {
                                "type": "Admitted",
                                "status": "True",
                                "lastTransitionTime": "2017-07-27T16:25:16Z"
                            }
                        ],
                        "wildcardPolicy": "None"
                    }
                ]
            }
        }
    ]
}
