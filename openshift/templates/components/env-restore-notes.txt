
1. postgresql
1.1 create nfs-backup storage: https://github.com/BCDevOps/provision-nfs-apb
bk-mem-tfrs-dev-51gffzadghxs
1.2 oc process -f ./postgresql.dc.json | oc create -f - -n mem-tfrs-dev --dry-run=true
1.3 create extension
tfrs=# create extension hstore;
tfrs=# create extension pg_trgm;
1.4 
mkdir /postgresql-backup/SQLDump
mkdir /postgresql-backup/SQLDump/dev
mkdir /postgresql-backup/basebackup
mkdir /postgresql-backup/basebackup/dev
mkdir /postgresql-backup/walbackup
mkdir /postgresql-backup/walbackup/dev
tfrs-backup.sh 
notes: 
	a. use same secret tfrs-postgresql from mem-tfrs-test
	b. full database backup test database and recover to dev database
	c. remember to enable bakcup in postgresql.conf according to tfrs wiki 

2. rabbitmq
2.1 create secret rabbitmq-tfrs, refer to the same one in mem-tfrs-tools project
2.2 oc process -f ./rabbitmq-dc.json ENV_NAME=dev | oc create -f - -n mem-tfrs-dev --dry-run=true
2.3 error: Readiness probe failed: dial tcp 172.51.117.101:5672: connect: connection refused
rabbitmqctl add_user admin [password]
rabbitmqctl set_user_tags admin administrator
rabbitmqctl add_user tfrs [password]   ## refer to secret
rabbitmqctl add_vhost /tfrs     ##yes, it is /tfrs
login https://rabbit-mem-tfrs-dev.pathfinder.gov.bc.ca and go to admin tab and set as below:
<<<<
Name
Tags
Can access virtual hosts	Has password
admin
administrator	/tfrs	●
guest
administrator	/, /tfrs	●
tfrs
/tfrs	●
>>>>	

3. create minio
3.1 oc process -f ./minio-dc.json ENV_NAME=dev | oc create -f - --dry-run=true
3.2 go to https://docs-mem-tfrs-dev.pathfinder.gov.bc.ca  to create bucket tfrs by clicking the plus button

4. create backend
create keycloak secret keycloak-sa-client-secret, can be found keycload console -> clients -> credentials
oc process -f ./tfrs-dc.json \
ENV_NAME=dev \
SOURCE_IS_NAME=tfrs-develop \
ROUTE_HOST_NAME=dev-lowcarbonfuels.pathfinder.gov.bc.ca \
ROUTE_NAME=dev-lowcarbonfuels-backend \
KEYCLOAK_SA_BASEURL=https://sso-dev.pathfinder.gov.bc.ca \
KEYCLOAK_SA_CLIENT_ID=tfrs-dev-django-sa \
KEYCLOAK_SA_REALM=tfrs-dev \
KEYCLOAK_AUDIENCE=tfrs-dev \
KEYCLOAK_CERTS_URL=https://sso-dev.pathfinder.gov.bc.ca/auth/realms/tfrs-dev/protocol/openid-connect/certs \
KEYCLOAK_CLIENT_ID=tfrs-dev \
KEYCLOAK_ISSUER=https://sso-dev.pathfinder.gov.bc.ca/auth/realms/tfrs-dev \
KEYCLOAK_REALM=https://sso-dev.pathfinder.gov.bc.ca/auth/realms/tfrs-dev \
| oc create -f - -n mem-tfrs-dev --dry-run=true

5. create clamav
oc process -f ./clamav-dc.json ENV_NAME=dev -n mem-tfrs-dev | oc create -f - --dry-run=true


6. create scan-coordinator
oc process -f ./scan-coordinator-dc.json ENV_NAME=dev SOURCE_IS_NAME=scan-coordinator-develop | oc create -f -

7. create scan-handler
oc process -f ./scan-handler-dc.json ENV_NAME=dev SOURCE_IS_NAME=scan-handler-develop -n mem-tfrs-dev | oc create -f - --dry-run=true

8. create celery
oc process -f ./celery-dc.json ENV_NAME=dev SOURCE_IS_NAME=celery-develop -n mem-tfrs-dev | oc create -f - --dry-run=true

9. create frontend,  remember to set the insecure route to be redirect in frontend route settings
oc process -f ./client-dc.json \
ENV_NAME=dev \
SOURCE_IS_NAME=client-develop \
KEYCLOAK_AUTHORITY=https://sso-dev.pathfinder.gov.bc.ca/auth/realms/tfrs-dev \
KEYCLOAK_CLIENT_ID=tfrs-dev \
KEYCLOAK_CALLBACK_URL=https://dev-lowcarbonfuels.pathfinder.gov.bc.ca/authCallback \
KEYCLOAK_LOGOUT_URL=https://logontest.gov.bc.ca/clp-cgi/logoff.cgi?returl=https%3A%2F%2Fdev-lowcarbonfuels.pathfinder.gov.bc.ca%2F ROUTE_HOST_NAME=dev-lowcarbonfuels.pathfinder.gov.bc.ca ROUTE_NAME=dev-lowcarbonfuels-frontend -n mem-tfrs-dev | oc create -f - --dry-run=true

10. create notification server
oc process -f ./notification-server-dc.json ENV_NAME=dev SOURCE_IS_NAME=notification-server-develop DASH_ENV_NAME=-dev ROUTE_NAME=dev-lowcarbonfuels-notification ROUTE_HOST=dev-lowcarbonfuels.pathfinder.gov.bc.ca -n mem-tfrs-dev | oc create -f -

11. maintenance page
oc process -f ./maintenance-page.dc.json ENV_NAME=dev -n mem-tfrs-dev | oc create -f - --dry-run=true


12. permission
oc policy add-role-to-user edit mem-tfrs-tools/jenkins-basic -n mem-tfrs-dev