{
    "apiVersion": "apps.openshift.io/v1",
    "kind": "DeploymentConfig",
    "metadata": {
        "annotations": {
            "description": "Defines how to deploy the application server"
        },
        "creationTimestamp": null,
        "generation": 1,
        "labels": {
            "template": "tfrs-app-environment"
        },
        "name": "client",
        "selfLink": "/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client"
    },
    "parameters": [
        {
            "name": "ENV_NAME",
            "displayName": "Environment name",
            "description": "Valid values: dev, test and prod",
            "required": true
        },
        {
            "name": "SOURCE_IS_NAME",
            "displayName": "The source image stream name",
            "description": "The image stream could trigger the deployment, valid values: client-develop and client",
            "required": true
        },
        {
            "name": "SOURCE_IS_TAG",
            "displayName": "The source image stream tag name",
            "description": "The source image stream plus tag could trigger the deployment, valid values: dev, test and prod",
            "required": true
        }
    ],
    "spec": {
        "replicas": 1,
        "revisionHistoryLimit": 10,
        "selector": {
            "name": "client"
        },
        "strategy": {
            "activeDeadlineSeconds": 21600,
            "recreateParams": {
                "post": {
                    "execNewPod": {
                        "command": [
                            "/bin/sh",
                            "-c",
                            "echo \"testing\" \u003e /tmp/app/dist/config/qqq"
                        ],
                        "containerName": "client"
                    },
                    "failurePolicy": "Abort"
                },
                "timeoutSeconds": 600
            },
            "resources": {},
            "type": "Recreate"
        },
        "template": {
            "metadata": {
                "creationTimestamp": null,
                "labels": {
                    "name": "client"
                },
                "name": "client"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "RealIpFrom"
                            },
                            {
                                "name": "AdditionalRealIpFromRules"
                            },
                            {
                                "name": "IpFilterRules"
                            },
                            {
                                "name": "HTTP_BASIC"
                            }
                        ],
                        "image": "",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 3
                        },
                        "name": "client",
                        "ports": [
                            {
                                "containerPort": 3000,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 3
                        },
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "memory": "200Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp/app/dist/config",
                                "name": "keycloak-config-data"
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "terminationGracePeriodSeconds": 30,
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "keycloak-config"
                        },
                        "name": "keycloak-config-data"
                    }
                ]
            }
        },
        "test": false,
        "triggers": [
            {
                "imageChangeParams": {
                    "automatic": true,
                    "containerNames": [
                        "client"
                    ],
                    "from": {
                        "kind": "ImageStreamTag",
                        "name": "${SOURCE_IS_NAME}:${SOURCE_IS_TAG}",
                        "namespace": "mem-tfrs-tools"
                    }
                },
                "type": "ImageChange"
            },
            {
                "type": "ConfigChange"
            }
        ]
    },
    "status": {
        "availableReplicas": 0,
        "latestVersion": 0,
        "observedGeneration": 0,
        "replicas": 0,
        "unavailableReplicas": 0,
        "updatedReplicas": 0
    }
}
