{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "name": "notification",
        "creationTimestamp": null
    },
    "parameters": [
        {
            "name": "ENV",
            "displayName": "Environment Name,",
            "description": "Environment Name such as dev, test and prod",
            "required": true
        },
        {
            "name": "NOTIFICATION_SERVER_IMAGE_NAME",
            "displayName": "Notificatiom Server Image Name",
            "description": "Notificatiom Server Image Name, such as notification-server-develop for dev and notification-server for test and prod",
            "required": true
        },
        {
            "name": "PROJECT_NAME_SPACE",
            "displayName": "Project Name Space",
            "description": "Project Name Space, such as mem-tfrs-dev, mem-tfrs-test and mem-tfrs-prod",
            "required": true
        },
        {
            "name": "TFRS_INTERNAL_HOST_NAME",
            "displayName": "TFRS internal host name",
            "description": "TFRS internal host name dev-lowcarbonfuels.pathfinder.bcgov, test-lowcarbonfuels.pathfinder.bcgov and lowcarbonfuels.pathfinder.bcgov",
            "required": true
        }
    ],
    "objects": [
        {
            "kind": "StatefulSet",
            "apiVersion": "apps/v1beta1",
            "metadata": {
                "name": "rabbitmq",
                "generation": 1,
                "creationTimestamp": null,
                "labels": {
                    "template": "tfrs-app-environment"
                },
                "annotations": {
                    "description": "Deploys a RabbitMQ instance within a TFRS environment"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "rabbitmq"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "rabbitmq"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "rabbitmq",
                                "image": "docker-registry.default.svc:5000/mem-tfrs-tools/rabbitmq-tfrs:latest",
                                "command": [
                                    "rabbitmq-server"
                                ],
                                "ports": [
                                    {
                                        "name": "web-management",
                                        "containerPort": 15672,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "amqp",
                                        "containerPort": 5672,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "512Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "rabbit",
                                        "mountPath": "/var/lib/rabbitmq"
                                    }
                                ],
                                "readinessProbe": {
                                    "tcpSocket": {
                                        "port": 5672
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 3,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "volumeClaimTemplates": [
                    {
                        "metadata": {
                            "name": "rabbit",
                            "creationTimestamp": null
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "512Mi"
                                }
                            }
                        },
                        "status": {
                            "phase": "Pending"
                        }
                    }
                ],
                "serviceName": ""
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "notification-server",
                "generation": 1,
                "creationTimestamp": null,
                "labels": {
                    "template": "notification-server"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate",
                    "recreateParams": {
                        "timeoutSeconds": 600
                    },
                    "resources": {},
                    "activeDeadlineSeconds": 21600
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "notification-server"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "mem-tfrs-tools",
                                "name": "${NOTIFICATION_SERVER_IMAGE_NAME}:${ENV}"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "test": false,
                "selector": {
                    "name": "notification-server"
                },
                "template": {
                    "metadata": {
                        "name": "notification-server",
                        "creationTimestamp": null,
                        "labels": {
                            "name": "notification-server"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "notification-server",
                                "image": "",
                                "ports": [
                                    {
                                        "containerPort": 3000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "RABBITMQ_HOST",
                                        "value": "rabbit.${PROJECT_NAME_SPACE}.svc"
                                    },
                                    {
                                        "name": "RABBITMQ_VHOST",
                                        "value": "/tfrs"
                                    },
                                    {
                                        "name": "RABBITMQ_USER",
                                        "value": "tfrs"
                                    },
                                    {
                                        "name": "RABBITMQ_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "name": "rabbitmq",
                                                "key": "password"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NPM_RUN",
                                        "value": "start:notifications"
                                    }
                                ],
                                "resources": {},
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 3000,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 3,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "rabbit",
                "creationTimestamp": null
            },
            "spec": {
                "ports": [
                    {
                        "name": "amqp",
                        "protocol": "TCP",
                        "port": 5672,
                        "targetPort": 5672
                    },
                    {
                        "name": "management-web",
                        "protocol": "TCP",
                        "port": 15672,
                        "targetPort": 15672
                    }
                ],
                "selector": {
                    "app": "rabbitmq"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "notification-server",
                "creationTimestamp": null
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 8080,
                        "targetPort": 3000
                    }
                ],
                "selector": {
                    "name": "notification-server"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "metadata": {
                "name": "notification-server",
                "creationTimestamp": null
            },
            "spec": {
                "host": "${TFRS_INTERNAL_HOST_NAME}",
                "path": "/socket.io",
                "to": {
                    "kind": "Service",
                    "name": "notification-server",
                    "weight": 100
                },
                "tls": {
                    "termination": "edge"
                },
                "wildcardPolicy": "None"
            },
            "status": {
            }
        }
    ]
}
