apiVersion: v1
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    creationTimestamp: null
    generation: 1
    labels:
      app: httpd-example
      template: httpd-example
    name: httpd-example
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.50.0.2:5000/mem-tfrs-prod/httpd-example:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    creationTimestamp: null
    generation: 1
    name: client
  spec:
    replicas: 1
    selector:
      name: client
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: client
        name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:391ef74b686d0eff42e7c82bb73cba33b8e7a698f866fe777f08cb5a73b9f5b6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - client
        from:
          kind: ImageStreamTag
          name: client:prod
          namespace: mem-tfrs-tools
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql
  spec:
    replicas: 1
    selector:
      name: postgresql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.5
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the container.
    creationTimestamp: null
    generation: 1
    name: schema-spy
  spec:
    replicas: 1
    selector:
      name: schema-spy
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: schema-spy
        name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - schema-spy
        from:
          kind: ImageStreamTag
          name: schema-spy:latest
          namespace: mem-tfrs-tools
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    creationTimestamp: null
    generation: 1
    labels:
      template: tfrs-app-environment
    name: tfrs
  spec:
    replicas: 1
    selector:
      name: tfrs
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        mid:
          execNewPod:
            command:
            - /bin/sh
            - -c
            - python manage.py migrate
            containerName: tfrs-app
          failurePolicy: Abort
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: tfrs
        name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:50ca4b0774b605102043039c8368c2134601ea3e927314080a92ff368b7a5d5c
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - tfrs-app
        from:
          kind: ImageStreamTag
          name: tfrs:prod
          namespace: mem-tfrs-tools
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      kubectl.kubernetes.io/update-source-id: client-13:1455dbf1-b47d-11e7-9c18-005056832285
      openshift.io/deployer-pod.name: client-15-deploy
      openshift.io/deployment-config.latest-version: "15"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: newer deployment was found running
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/oapi/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"269565646","generation":18,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:b7ca18d6a65bbd10011b75d1fc2b52634d4cf16cb00485f6dbf9b7d8627d2aea"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:b7ca18d6a65bbd10011b75d1fc2b52634d4cf16cb00485f6dbf9b7d8627d2aea","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":3000,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":3000,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{}}}},"status":{"latestVersion":15,"observedGeneration":17,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-11-19T14:53:28Z","lastTransitionTime":"2017-11-19T14:53:28Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"False","lastUpdateTime":"2017-11-21T23:05:33Z","lastTransitionTime":"2017-11-21T23:05:33Z","reason":"ProgressDeadlineExceeded","message":"replication controller \"client-14\" has failed progressing"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-15
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 0
    selector:
      deployment: client-15
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "15"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-15
        creationTimestamp: null
        labels:
          deployment: client-15
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:b7ca18d6a65bbd10011b75d1fc2b52634d4cf16cb00485f6dbf9b7d8627d2aea
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: client-24-deploy
      openshift.io/deployment-config.latest-version: "24"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"285337679","generation":35,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:3cc877ccfcac4fe95fb271c9af682badb869e8b3eea5dccc98f7d6affdd383fd"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:3cc877ccfcac4fe95fb271c9af682badb869e8b3eea5dccc98f7d6affdd383fd","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"1Gi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":24,"observedGeneration":34,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-12-05T03:22:18Z","lastTransitionTime":"2017-12-05T03:22:18Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-08T09:09:33Z","lastTransitionTime":"2017-12-08T09:09:31Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-23\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-24
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 0
    selector:
      deployment: client-24
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "24"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-24
        creationTimestamp: null
        labels:
          deployment: client-24
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:3cc877ccfcac4fe95fb271c9af682badb869e8b3eea5dccc98f7d6affdd383fd
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: client-25-deploy
      openshift.io/deployment-config.latest-version: "25"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"285603550","generation":37,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:9b5aac60809670d674f6b01190edd2ea5880432f8318816a9682fa41e910a631"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:9b5aac60809670d674f6b01190edd2ea5880432f8318816a9682fa41e910a631","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"1Gi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":25,"observedGeneration":36,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-12-05T03:22:18Z","lastTransitionTime":"2017-12-05T03:22:18Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-12T00:02:31Z","lastTransitionTime":"2017-12-12T00:02:29Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-24\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-25
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 0
    selector:
      deployment: client-25
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "25"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-25
        creationTimestamp: null
        labels:
          deployment: client-25
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:9b5aac60809670d674f6b01190edd2ea5880432f8318816a9682fa41e910a631
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: client-26-deploy
      openshift.io/deployment-config.latest-version: "26"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"285932415","generation":39,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:8d80470cba11f9e7493d7714e104c8fa17c8c71e68dd63513b61a81a8a50b790"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:8d80470cba11f9e7493d7714e104c8fa17c8c71e68dd63513b61a81a8a50b790","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"1Gi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":26,"observedGeneration":38,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-12-05T03:22:18Z","lastTransitionTime":"2017-12-05T03:22:18Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-12T09:10:04Z","lastTransitionTime":"2017-12-12T09:10:01Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-25\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-26
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 0
    selector:
      deployment: client-26
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "26"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-26
        creationTimestamp: null
        labels:
          deployment: client-26
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:8d80470cba11f9e7493d7714e104c8fa17c8c71e68dd63513b61a81a8a50b790
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: client-27-deploy
      openshift.io/deployment-config.latest-version: "27"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"285965664","generation":41,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:fbb04208a20276629a2aecae7445663ac2d41d5c822cdd2e82126c7f2bde04d3"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:fbb04208a20276629a2aecae7445663ac2d41d5c822cdd2e82126c7f2bde04d3","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"1Gi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":27,"observedGeneration":40,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-12-05T03:22:18Z","lastTransitionTime":"2017-12-05T03:22:18Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-12T17:59:41Z","lastTransitionTime":"2017-12-12T17:59:39Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-26\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-27
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 0
    selector:
      deployment: client-27
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "27"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-27
        creationTimestamp: null
        labels:
          deployment: client-27
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:fbb04208a20276629a2aecae7445663ac2d41d5c822cdd2e82126c7f2bde04d3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: client-28-deploy
      openshift.io/deployment-config.latest-version: "28"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"286122152","generation":43,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:d983cf7cd18b41b0f5e1281fef4758ff902853f4d31f4b1cf02ef5bf67f89cca"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:d983cf7cd18b41b0f5e1281fef4758ff902853f4d31f4b1cf02ef5bf67f89cca","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"1Gi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":28,"observedGeneration":42,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-12T18:48:03Z","lastTransitionTime":"2017-12-12T18:48:00Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-27\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2017-12-12T19:37:13Z","lastTransitionTime":"2017-12-12T19:37:13Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-28
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 0
    selector:
      deployment: client-28
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "28"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-28
        creationTimestamp: null
        labels:
          deployment: client-28
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:d983cf7cd18b41b0f5e1281fef4758ff902853f4d31f4b1cf02ef5bf67f89cca
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: client-29-deploy
      openshift.io/deployment-config.latest-version: "29"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"329830517","generation":47,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:7b70a249fcf707aba746df06eee95ff1b3c329b0287abed2304f91c3caba16a1"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:7b70a249fcf707aba746df06eee95ff1b3c329b0287abed2304f91c3caba16a1","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"1Gi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":29,"observedGeneration":46,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-12T22:52:55Z","lastTransitionTime":"2017-12-12T22:52:52Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-28\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-01-30T22:48:34Z","lastTransitionTime":"2018-01-30T22:48:34Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-29
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 0
    selector:
      deployment: client-29
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "29"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-29
        creationTimestamp: null
        labels:
          deployment: client-29
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:7b70a249fcf707aba746df06eee95ff1b3c329b0287abed2304f91c3caba16a1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: client-30-deploy
      openshift.io/deployment-config.latest-version: "30"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"337547683","generation":49,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:c7523ad62d34e6a9f283173a59c609f5884c458be4d1283f6ed58ac64f081de9"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:c7523ad62d34e6a9f283173a59c609f5884c458be4d1283f6ed58ac64f081de9","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"1Gi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":30,"observedGeneration":48,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-01T18:45:42Z","lastTransitionTime":"2018-02-01T18:45:39Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-29\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-05T11:56:37Z","lastTransitionTime":"2018-02-05T11:56:37Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-30
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 0
    selector:
      deployment: client-30
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "30"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-30
        creationTimestamp: null
        labels:
          deployment: client-30
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:c7523ad62d34e6a9f283173a59c609f5884c458be4d1283f6ed58ac64f081de9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: client-31-deploy
      openshift.io/deployment-config.latest-version: "31"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"337560369","generation":51,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:391ef74b686d0eff42e7c82bb73cba33b8e7a698f866fe777f08cb5a73b9f5b6"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:391ef74b686d0eff42e7c82bb73cba33b8e7a698f866fe777f08cb5a73b9f5b6","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"1Gi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":31,"observedGeneration":50,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-02-05T11:56:37Z","lastTransitionTime":"2018-02-05T11:56:37Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-09T22:50:48Z","lastTransitionTime":"2018-02-09T22:50:46Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-30\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-31
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 1
    selector:
      deployment: client-31
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "31"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-31
        creationTimestamp: null
        labels:
          deployment: client-31
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:391ef74b686d0eff42e7c82bb73cba33b8e7a698f866fe777f08cb5a73b9f5b6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: caused by an image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-prod","selfLink":"/oapi/v1/namespaces/mem-tfrs-prod/deploymentconfigs/postgresql","uid":"23a4bb36-fadf-11e6-8d55-0050568348cc","resourceVersion":"42027852","generation":2,"creationTimestamp":"2017-02-24T22:18:16Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{}},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:58d0593918b98ed5b4f33ae06e85b9131013b3808bb5dad7b18d5aa5244ed714"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:58d0593918b98ed5b4f33ae06e85b9131013b3808bb5dad7b18d5aa5244ed714","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_USER","value":"userSRU"},{"name":"POSTGRESQL_PASSWORD","value":"YwyryuvB12gXLFdE"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{}}}},"status":{"latestVersion":1,"details":{"message":"caused by an image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"}}}]}}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 23a4bb36-fadf-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: postgresql-1
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-1
        creationTimestamp: null
        labels:
          deployment: postgresql-1
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: userSRU
          - name: POSTGRESQL_PASSWORD
            value: YwyryuvB12gXLFdE
          - name: POSTGRESQL_DATABASE
            value: tfrs
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:58d0593918b98ed5b4f33ae06e85b9131013b3808bb5dad7b18d5aa5244ed714
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-2-deploy
      openshift.io/deployment-config.latest-version: "2"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: caused by an image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-prod","selfLink":"/oapi/v1/namespaces/mem-tfrs-prod/deploymentconfigs/postgresql","uid":"23a4bb36-fadf-11e6-8d55-0050568348cc","resourceVersion":"138652207","generation":3,"creationTimestamp":"2017-02-24T22:18:16Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{}},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:155cf81a3d3a8bbcab3a1f61b177cab75a4105306146d172ef8fb29488cf58b4"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:155cf81a3d3a8bbcab3a1f61b177cab75a4105306146d172ef8fb29488cf58b4","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_USER","value":"userSRU"},{"name":"POSTGRESQL_PASSWORD","value":"YwyryuvB12gXLFdE"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{}}}},"status":{"latestVersion":2,"observedGeneration":3,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"details":{"message":"caused by an image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"}}}]}}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-2
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 23a4bb36-fadf-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: postgresql-2
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "2"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-2
        creationTimestamp: null
        labels:
          deployment: postgresql-2
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: userSRU
          - name: POSTGRESQL_PASSWORD
            value: YwyryuvB12gXLFdE
          - name: POSTGRESQL_DATABASE
            value: tfrs
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:155cf81a3d3a8bbcab3a1f61b177cab75a4105306146d172ef8fb29488cf58b4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      openshift.io/deployer-pod.name: postgresql-4-deploy
      openshift.io/deployment-config.latest-version: "4"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/postgresql","uid":"23a4bb36-fadf-11e6-8d55-0050568348cc","resourceVersion":"269638525","generation":6,"creationTimestamp":"2017-02-24T22:18:16Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_USER","value":"userSRU"},{"name":"POSTGRESQL_PASSWORD","value":"YwyryuvB12gXLFdE"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":4,"observedGeneration":5,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"}}}]},"conditions":[{"type":"Progressing","status":"False","lastUpdateTime":"2017-11-14T19:43:47Z","lastTransitionTime":"2017-11-14T19:43:47Z","reason":"ProgressDeadlineExceeded","message":"replication controller \"postgresql-3\" has failed progressing"},{"type":"Available","status":"True","lastUpdateTime":"2017-11-19T14:55:39Z","lastTransitionTime":"2017-11-19T14:55:39Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-4
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 23a4bb36-fadf-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: postgresql-4
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "4"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-4
        creationTimestamp: null
        labels:
          deployment: postgresql-4
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: userSRU
          - name: POSTGRESQL_PASSWORD
            value: YwyryuvB12gXLFdE
          - name: POSTGRESQL_DATABASE
            value: tfrs
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-5-deploy
      openshift.io/deployment-config.latest-version: "5"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/postgresql","uid":"23a4bb36-fadf-11e6-8d55-0050568348cc","resourceVersion":"277101997","generation":7,"creationTimestamp":"2017-02-24T22:18:16Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_USER","value":"userSRU"},{"name":"POSTGRESQL_PASSWORD","value":"YwyryuvB12gXLFdE"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":5,"observedGeneration":6,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Progressing","status":"False","lastUpdateTime":"2017-11-22T00:37:48Z","lastTransitionTime":"2017-11-22T00:37:48Z","reason":"ProgressDeadlineExceeded","message":"replication controller \"postgresql-4\" has failed progressing"},{"type":"Available","status":"True","lastUpdateTime":"2017-11-27T19:04:45Z","lastTransitionTime":"2017-11-27T19:04:45Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-5
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 23a4bb36-fadf-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: postgresql-5
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "5"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-5
        creationTimestamp: null
        labels:
          deployment: postgresql-5
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: userSRU
          - name: POSTGRESQL_PASSWORD
            value: YwyryuvB12gXLFdE
          - name: POSTGRESQL_DATABASE
            value: tfrs
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-6-deploy
      openshift.io/deployment-config.latest-version: "6"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/postgresql","uid":"23a4bb36-fadf-11e6-8d55-0050568348cc","resourceVersion":"322445298","generation":14,"creationTimestamp":"2017-02-24T22:18:16Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_USER","value":"userSRU"},{"name":"POSTGRESQL_PASSWORD","value":"YwyryuvB12gXLFdE"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":6,"observedGeneration":13,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2017-11-30T21:48:45Z","lastTransitionTime":"2017-11-30T21:48:23Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-5\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-01-23T23:38:46Z","lastTransitionTime":"2018-01-23T23:38:46Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-6
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 23a4bb36-fadf-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: postgresql-6
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "6"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-6
        creationTimestamp: null
        labels:
          deployment: postgresql-6
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: userSRU
          - name: POSTGRESQL_PASSWORD
            value: YwyryuvB12gXLFdE
          - name: POSTGRESQL_DATABASE
            value: tfrs
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-7-deploy
      openshift.io/deployment-config.latest-version: "7"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/postgresql","uid":"23a4bb36-fadf-11e6-8d55-0050568348cc","resourceVersion":"327980710","generation":18,"creationTimestamp":"2017-02-24T22:18:16Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":7,"observedGeneration":17,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-23T23:42:17Z","lastTransitionTime":"2018-01-23T23:42:17Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-6\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-01-30T20:05:25Z","lastTransitionTime":"2018-01-30T20:05:25Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-7
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 23a4bb36-fadf-11e6-8d55-0050568348cc
  spec:
    replicas: 1
    selector:
      deployment: postgresql-7
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "7"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-7
        creationTimestamp: null
        labels:
          deployment: postgresql-7
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: schema-spy-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/schema-spy","uid":"ba26c687-d617-11e7-9b28-0050568379a2","resourceVersion":"277101186","generation":3,"creationTimestamp":"2017-11-30T21:45:05Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:30ba9d203cc30dd60a016e1744877909b1670d15a35997198980c0119b77fd91"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:30ba9d203cc30dd60a016e1744877909b1670d15a35997198980c0119b77fd91","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":2,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2017-11-30T21:45:05Z","lastTransitionTime":"2017-11-30T21:45:05Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: ba26c687-d617-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-1
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-1
        creationTimestamp: null
        labels:
          deployment: schema-spy-1
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:30ba9d203cc30dd60a016e1744877909b1670d15a35997198980c0119b77fd91
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: schema-spy-2-deploy
      openshift.io/deployment-config.latest-version: "2"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/schema-spy","uid":"ba26c687-d617-11e7-9b28-0050568379a2","resourceVersion":"277688337","generation":5,"creationTimestamp":"2017-11-30T21:45:05Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:34a41b022f6df5242c7dbfdc29121f63261f7daba26b79ac375d47116b8b9cea"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:34a41b022f6df5242c7dbfdc29121f63261f7daba26b79ac375d47116b8b9cea","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":2,"observedGeneration":4,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-11-30T21:46:52Z","lastTransitionTime":"2017-11-30T21:46:52Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2017-11-30T21:46:54Z","lastTransitionTime":"2017-11-30T21:46:12Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-1\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-2
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: ba26c687-d617-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-2
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "2"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-2
        creationTimestamp: null
        labels:
          deployment: schema-spy-2
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:34a41b022f6df5242c7dbfdc29121f63261f7daba26b79ac375d47116b8b9cea
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: schema-spy-3-deploy
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/schema-spy","uid":"ba26c687-d617-11e7-9b28-0050568379a2","resourceVersion":"277758405","generation":7,"creationTimestamp":"2017-11-30T21:45:05Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:43e43d8b988b50b5eb6b09fdb34c350e3efa1500108d208c0f754f7217f19274"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:43e43d8b988b50b5eb6b09fdb34c350e3efa1500108d208c0f754f7217f19274","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":3,"observedGeneration":6,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-11-30T21:46:52Z","lastTransitionTime":"2017-11-30T21:46:52Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-01T22:40:12Z","lastTransitionTime":"2017-12-01T22:40:09Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-2\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-3
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: ba26c687-d617-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-3
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "3"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-3
        creationTimestamp: null
        labels:
          deployment: schema-spy-3
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:43e43d8b988b50b5eb6b09fdb34c350e3efa1500108d208c0f754f7217f19274
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "0"
      openshift.io/deployer-pod.name: schema-spy-4-deploy
      openshift.io/deployment-config.latest-version: "4"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/schema-spy","uid":"ba26c687-d617-11e7-9b28-0050568379a2","resourceVersion":"327770071","generation":13,"creationTimestamp":"2017-11-30T21:45:05Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":4,"observedGeneration":12,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-02T00:54:35Z","lastTransitionTime":"2017-12-02T00:54:32Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-3\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-01-25T19:02:51Z","lastTransitionTime":"2018-01-25T19:02:51Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-4
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: ba26c687-d617-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-4
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "4"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-4
        creationTimestamp: null
        labels:
          deployment: schema-spy-4
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: schema-spy-5-deploy
      openshift.io/deployment-config.latest-version: "5"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/schema-spy","uid":"ba26c687-d617-11e7-9b28-0050568379a2","resourceVersion":"327981395","generation":16,"creationTimestamp":"2017-11-30T21:45:05Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":5,"observedGeneration":15,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-30T17:31:01Z","lastTransitionTime":"2018-01-30T17:30:57Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-4\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-01-30T20:01:28Z","lastTransitionTime":"2018-01-30T20:01:28Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-5
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: ba26c687-d617-11e7-9b28-0050568379a2
  spec:
    replicas: 1
    selector:
      deployment: schema-spy-5
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "5"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-5
        creationTimestamp: null
        labels:
          deployment: schema-spy-5
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      kubectl.kubernetes.io/update-source-id: tfrs-25:494cfe54-b487-11e7-9c18-005056832285
      openshift.io/deployer-pod.name: tfrs-34-deploy
      openshift.io/deployment-config.latest-version: "34"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/oapi/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"261407515","generation":37,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:bdf9a0c2388e53c81340f5605ce48aa507e7eefe1f731e67a5979aeaef5444ad"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:bdf9a0c2388e53c81340f5605ce48aa507e7eefe1f731e67a5979aeaef5444ad","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"DATABASE_USER","value":"userSRU"},{"name":"DATABASE_PASSWORD","value":"YwyryuvB12gXLFdE"},{"name":"APP_CONFIG"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{}}}},"status":{"latestVersion":34,"observedGeneration":36,"replicas":1,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":1,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2017-10-19T18:55:45Z","lastTransitionTime":"2017-10-19T18:55:45Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"False","lastUpdateTime":"2017-11-14T19:19:57Z","lastTransitionTime":"2017-11-14T19:19:57Z","reason":"ProgressDeadlineExceeded","message":"replication controller \"tfrs-33\" has failed progressing"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-34
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-34
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "34"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-34
        creationTimestamp: null
        labels:
          deployment: tfrs-34
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: DATABASE_USER
            value: userSRU
          - name: DATABASE_PASSWORD
            value: YwyryuvB12gXLFdE
          - name: APP_CONFIG
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:bdf9a0c2388e53c81340f5605ce48aa507e7eefe1f731e67a5979aeaef5444ad
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-46-deploy
      openshift.io/deployment-config.latest-version: "46"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"328018045","generation":72,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:ea7bd1d688c2c6f211405670bdd6bc4ac4b3c291c7df155d77d08ca67e549d57"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:ea7bd1d688c2c6f211405670bdd6bc4ac4b3c291c7df155d77d08ca67e549d57","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":46,"observedGeneration":71,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-01-30T22:56:27Z","lastTransitionTime":"2018-01-30T22:56:27Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-30T22:56:29Z","lastTransitionTime":"2018-01-30T22:56:07Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-45\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-46
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-46
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "46"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-46
        creationTimestamp: null
        labels:
          deployment: tfrs-46
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:ea7bd1d688c2c6f211405670bdd6bc4ac4b3c291c7df155d77d08ca67e549d57
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-47-deploy
      openshift.io/deployment-config.latest-version: "47"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"328816555","generation":74,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:5eca19b7604576029c138af684d7a47ea7eb82e54000c4be7e533310b0371992"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:5eca19b7604576029c138af684d7a47ea7eb82e54000c4be7e533310b0371992","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":47,"observedGeneration":73,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-01-30T23:37:51Z","lastTransitionTime":"2018-01-30T23:37:51Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-30T23:37:53Z","lastTransitionTime":"2018-01-30T23:37:31Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-46\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-47
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-47
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "47"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-47
        creationTimestamp: null
        labels:
          deployment: tfrs-47
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:5eca19b7604576029c138af684d7a47ea7eb82e54000c4be7e533310b0371992
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-48-deploy
      openshift.io/deployment-config.latest-version: "48"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"328895258","generation":76,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:b67e604122f52f5bf084a02be9482a9cd81410e0f1d095f5c414b6c5b019c6f6"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:b67e604122f52f5bf084a02be9482a9cd81410e0f1d095f5c414b6c5b019c6f6","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":48,"observedGeneration":75,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-01-31T19:47:51Z","lastTransitionTime":"2018-01-31T19:47:51Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-31T19:47:53Z","lastTransitionTime":"2018-01-31T19:47:31Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-47\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-48
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-48
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "48"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-48
        creationTimestamp: null
        labels:
          deployment: tfrs-48
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:b67e604122f52f5bf084a02be9482a9cd81410e0f1d095f5c414b6c5b019c6f6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-49-deploy
      openshift.io/deployment-config.latest-version: "49"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"330034874","generation":77,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:b67e604122f52f5bf084a02be9482a9cd81410e0f1d095f5c414b6c5b019c6f6"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:b67e604122f52f5bf084a02be9482a9cd81410e0f1d095f5c414b6c5b019c6f6","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":49,"observedGeneration":76,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-01-31T21:37:48Z","lastTransitionTime":"2018-01-31T21:37:48Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-31T21:37:49Z","lastTransitionTime":"2018-01-31T21:37:27Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-48\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-49
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-49
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "49"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-49
        creationTimestamp: null
        labels:
          deployment: tfrs-49
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:b67e604122f52f5bf084a02be9482a9cd81410e0f1d095f5c414b6c5b019c6f6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-50-deploy
      openshift.io/deployment-config.latest-version: "50"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"330039601","generation":80,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:587242822c57288dd1ab96b9d17cb07c1ed21772fe69e5454fb78b1233256629"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:587242822c57288dd1ab96b9d17cb07c1ed21772fe69e5454fb78b1233256629","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":50,"observedGeneration":79,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-02-01T23:14:17Z","lastTransitionTime":"2018-02-01T23:14:17Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-01T23:14:18Z","lastTransitionTime":"2018-02-01T23:13:56Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-49\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-50
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-50
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "50"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-50
        creationTimestamp: null
        labels:
          deployment: tfrs-50
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:587242822c57288dd1ab96b9d17cb07c1ed21772fe69e5454fb78b1233256629
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-51-deploy
      openshift.io/deployment-config.latest-version: "51"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"330817898","generation":82,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:14551021a28ff5f0b07e055e7cfa29bd0044024fbdc47644c3aee509198955a1"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:14551021a28ff5f0b07e055e7cfa29bd0044024fbdc47644c3aee509198955a1","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":51,"observedGeneration":81,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-02-01T23:21:07Z","lastTransitionTime":"2018-02-01T23:21:07Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-01T23:21:09Z","lastTransitionTime":"2018-02-01T23:20:47Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-50\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-51
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-51
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "51"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-51
        creationTimestamp: null
        labels:
          deployment: tfrs-51
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:14551021a28ff5f0b07e055e7cfa29bd0044024fbdc47644c3aee509198955a1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-52-deploy
      openshift.io/deployment-config.latest-version: "52"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"337560584","generation":84,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:50ca4b0774b605102043039c8368c2134601ea3e927314080a92ff368b7a5d5c"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:50ca4b0774b605102043039c8368c2134601ea3e927314080a92ff368b7a5d5c","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":52,"observedGeneration":83,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-02T18:33:29Z","lastTransitionTime":"2018-02-02T18:33:07Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-51\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-08T03:16:11Z","lastTransitionTime":"2018-02-08T03:16:11Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-52
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 1
    selector:
      deployment: tfrs-52
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "52"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-52
        creationTimestamp: null
        labels:
          deployment: tfrs-52
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:50ca4b0774b605102043039c8368c2134601ea3e927314080a92ff368b7a5d5c
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: api
  spec:
    host: lowcarbonfuels.pathfinder.bcgov
    path: /api
    port:
      targetPort: web
    to:
      kind: Service
      name: backend
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-02-01T00:17:50Z
        status: "True"
        type: Admitted
      host: lowcarbonfuels.pathfinder.bcgov
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: main
  spec:
    host: lowcarbonfuels.pathfinder.bcgov
    port:
      targetPort: web
    to:
      kind: Service
      name: client
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-02-01T00:18:13Z
        status: "True"
        type: Admitted
      host: lowcarbonfuels.pathfinder.bcgov
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: schema-spy
  spec:
    host: schema-spy-mem-tfrs-prod.pathfinder.gov.bc.ca
    to:
      kind: Service
      name: schema-spy
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-11-30T21:45:05Z
        status: "True"
        type: Admitted
      host: schema-spy-mem-tfrs-prod.pathfinder.gov.bc.ca
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "postgresql", "kind": "Service"}]'
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: backend
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: tfrs
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the front end pods
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: client
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: client
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: glusterfs-cluster-app
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: postgresql-cns
    name: glusterfs-dynamic-postgresql-cns
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
    creationTimestamp: null
    name: schema-spy
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: schema-spy
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-prod","name":"client-31","uid":"b23fc7bd-0dee-11e8-a354-0050568379a2","apiVersion":"v1","resourceVersion":"337560503"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        client; cpu limit for container client'
      openshift.io/deployment-config.latest-version: "31"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.name: client-31
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: client-31-
    labels:
      deployment: client-31
      deploymentconfig: client
      name: client
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: client-31
      uid: b23fc7bd-0dee-11e8-a354-0050568379a2
  spec:
    containers:
    - env:
      - name: API_URL
        value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
      - name: RealIpFrom
      - name: AdditionalRealIpFromRules
      - name: IpFilterRules
      - name: HTTP_BASIC
      - name: API_URL
        value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
      image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:391ef74b686d0eff42e7c82bb73cba33b8e7a698f866fe777f08cb5a73b9f5b6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: client
      ports:
      - containerPort: 3000
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 1Gi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
          - SYS_CHROOT
        privileged: false
        runAsUser: 1000280000
        seLinuxOptions:
          level: s0:c17,c4
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-p2mgj
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-int0v
    nodeName: ociopf-p-184.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000280000
      seLinuxOptions:
        level: s0:c17,c4
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-p2mgj
      secret:
        defaultMode: 420
        secretName: default-token-p2mgj
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-prod","name":"postgresql-7","uid":"29b09972-060d-11e8-b39a-0050568348cc","apiVersion":"v1","resourceVersion":"327989572"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        postgresql; cpu limit for container postgresql'
      openshift.io/deployment-config.latest-version: "7"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.name: postgresql-7
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: postgresql-7-
    labels:
      deployment: postgresql-7
      deploymentconfig: postgresql
      name: postgresql
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: postgresql-7
      uid: 29b09972-060d-11e8-b39a-0050568348cc
  spec:
    containers:
    - env:
      - name: POSTGRESQL_DATABASE
        value: tfrs
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 5432
        timeoutSeconds: 1
      name: postgresql
      ports:
      - containerPort: 5432
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -i
          - -c
          - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT
            1'
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
          - SYS_CHROOT
        privileged: false
        runAsUser: 1000280000
        seLinuxOptions:
          level: s0:c17,c4
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/pgsql/data
        name: postgresql-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-p2mgj
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-int0v
    nodeName: ociopf-p-181.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000280000
      seLinuxOptions:
        level: s0:c17,c4
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: postgresql-data
      persistentVolumeClaim:
        claimName: postgresql-cns
    - name: default-token-p2mgj
      secret:
        defaultMode: 420
        secretName: default-token-p2mgj
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-prod","name":"schema-spy-5","uid":"51e0000f-060d-11e8-b39a-0050568348cc","apiVersion":"v1","resourceVersion":"327990074"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        schema-spy; cpu limit for container schema-spy'
      openshift.io/deployment-config.latest-version: "5"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.name: schema-spy-5
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: schema-spy-5-
    labels:
      deployment: schema-spy-5
      deploymentconfig: schema-spy
      name: schema-spy
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: schema-spy-5
      uid: 51e0000f-060d-11e8-b39a-0050568348cc
  spec:
    containers:
    - env:
      - name: DATABASE_SERVICE_NAME
        value: postgresql
      - name: POSTGRESQL_DATABASE
        value: tfrs
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3000
      name: schema-spy
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3000
      resources:
        limits:
          cpu: "1"
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
          - SYS_CHROOT
        privileged: false
        runAsUser: 1000280000
        seLinuxOptions:
          level: s0:c17,c4
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-p2mgj
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-int0v
    nodeName: ociopf-p-190.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000280000
      seLinuxOptions:
        level: s0:c17,c4
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-p2mgj
      secret:
        defaultMode: 420
        secretName: default-token-p2mgj
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-prod","name":"tfrs-52","uid":"badc0986-0dee-11e8-a354-0050568379a2","apiVersion":"v1","resourceVersion":"337560928"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        tfrs-app; cpu limit for container tfrs-app'
      openshift.io/deployment-config.latest-version: "52"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.name: tfrs-52
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: tfrs-52-
    labels:
      deployment: tfrs-52
      deploymentconfig: tfrs
      name: tfrs
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: tfrs-52
      uid: badc0986-0dee-11e8-a354-0050568379a2
  spec:
    containers:
    - env:
      - name: DATABASE_SERVICE_NAME
        value: postgresql
      - name: DATABASE_ENGINE
        value: postgresql
      - name: DATABASE_NAME
        value: tfrs
      - name: APP_CONFIG
      - name: DATABASE_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: DATABASE_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:50ca4b0774b605102043039c8368c2134601ea3e927314080a92ff368b7a5d5c
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: tfrs-app
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "1"
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
          - SYS_CHROOT
        privileged: false
        runAsUser: 1000280000
        seLinuxOptions:
          level: s0:c17,c4
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-p2mgj
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-int0v
    nodeName: ociopf-p-187.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000280000
      seLinuxOptions:
        level: s0:c17,c4
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-p2mgj
      secret:
        defaultMode: 420
        secretName: default-token-p2mgj
  status:
    phase: Pending
    qosClass: Burstable
kind: List
metadata: {}
